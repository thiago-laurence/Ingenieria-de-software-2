@model IEnumerable<Aplicacion.Models.Turnos>
@using Microsoft.AspNetCore.Identity;
@using System.Security.Claims;

@{
	ViewData["Title"] = "Index";
}
<link href="https://fonts.googleapis.com/css?family=Lato:300,400,700&display=swap" rel="stylesheet">

<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" href="css/estiloCalendario.css">


@if (User.Identity.IsAuthenticated)
{

	<section class="ftco-section" id="seccion" data-usuario-mail="@User.FindFirstValue("email")">
		<div class="container">
			<div class="row ">
				<div class="col-xl-12 ">
					<div class="content w-100">
						<div class="calendar-container">
							<div class="calendar">
								<div class="year-header">
									<span class="left-button fa fa-chevron-left" id="prev"> </span>
									<span class="year" id="label"></span>
									<span class="right-button fa fa-chevron-right" id="next"> </span>
								</div>
								<table class="months-table w-100">
									<tbody>
										<tr class="months-row">
											<td class="month">Ene</td>
											<td class="month">Feb</td>
											<td class="month">Mar</td>
											<td class="month">Abr</td>
											<td class="month">May</td>
											<td class="month">Jun</td>
											<td class="month">Jul</td>
											<td class="month">Ago</td>
											<td class="month">Sep</td>
											<td class="month">Oct</td>
											<td class="month">Nov</td>
											<td class="month">Dic</td>
										</tr>
									</tbody>
								</table>

								<table class="days-table w-100">
									<td class="day">Dom</td>
									<td class="day">Lun</td>
									<td class="day">Mar</td>
									<td class="day">Mie</td>
									<td class="day">Jue</td>
									<td class="day">Vie</td>
									<td class="day">Sab</td>
								</table>
								<div class="frame">
									<table class="dates-table w-100">
										<tbody class="tbody">
										</tbody>
									</table>
								</div>
								@if (!User.IsInRole("Administrador"))
								{
									<button class="button d-none" disabled id="add-button">Solicitar turno</button>
								}
								else
								{<div class="d-flex justify-content-center">
									<button class="btn btn-success mb-3"  id="aceptados-button">Aceptados</button>
									<button class="btn btn-danger mx-2 mb-3"  id="rechazados-button">Rechazados</button>
									<button class="btn btn-warning mb-3 activa" id="pendientes-button">Pendientes</button>
								</div>
								}

									
									</div>
							</div>
							<div class="events-container">
							</div>


							
		</section>
}
	
else
{
	<div class="container d-flex align-items-center justify-content-center">
		<h1>
			Para acceder a este sitio debe estar registrado.
		</h1>
		<img class="w-50 h-50" src="/img/PerroError.svg" />
	</div>
}

<!--Inicio Modal Ver detalle pendiente-->
<div class="modal fade" id="detallePendiente" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h1 class="modal-title fs-5" id="staticBackdropLabel">
					<i class="fa-solid fa-user-plus fa-xl" style="color: #000000;"></i>
					Registrar nuevo cuidador
				</h1>
				<!--<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>-->
			</div>
			<div class="modal-body">
				<form autocomplete="off" class="row g-3 needs-validation" novalidate id="formNuevoCliente">
					<div class="col-md-12">
						<label class="form-label">Email</label>
						<div class="input-group has-validation">
							<span class="input-group-text" id="inputGroupPrepend">@@</span>
							<input type="email" maxlength="50" class="form-control" id="nuevoEmail" aria-describedby="inputGroupPrepend" required>
							<div class="invalid-feedback">
								Ingrese un email válido (con @@)!
							</div>
						</div>
					</div>
					<div class="col-md-6">
						<label class="form-label">Nombre</label>
						<input type="text" maxlength="20" class="form-control" id="nuevoNombre" required>
						<div class="invalid-feedback">
							Ingrese un nombre!
						</div>
					</div>
					<div class="col-md-6">
						<label class="form-label">Apellido</label>
						<input type="text" maxlength="20" class="form-control" id="nuevoApellido" required>
						<div class="invalid-feedback">
							Ingresa un apellido!
						</div>
					</div>
					<div class="col-md-12">
						<label class="form-label">Ubicación</label>
						<input class="form-control" autocomplete="false" id="nuevoUbicacion" maxlength="300" required placeholder="Por ejemplo, calle 64 1544">
						<div class="invalid-feedback">
							Ingresa una dirección!
						</div>
					</div>
					<div class="col-md-12">
						<label class="form-label">Modalidad de trabajo</label> <br />
						<div class="form-check">
							<input class="form-check-input" type="checkbox" value="1" id="nuevoModalidad1" required>
							<label class="form-check-label" for="flexCheckDefault">
								Ir a domicilio
							</label>
						</div>
						<div class="form-check">
							<input class="form-check-input" type="checkbox" value="2" id="nuevoModalidad2" required>
							<label class="form-check-label" for="flexCheckChecked">
								En el hogar
							</label>
							<div class="invalid-feedback">
								Ingrese al menos una modalidad de trabajo!
							</div>
						</div>
					</div>
					<div class="col-md-6">
						<label class="form-label">Horario de comienzo</label>
						<input type="time" class="form-control" id="nuevoHorarioIN" required>
						<div class="invalid-feedback">
							Ingrese horas válidas (el horario de fin debe ser mayor al de comienzo)!
						</div>
					</div>
					<div class="col-md-6">
						<label class="form-label">Horario de fin</label>
						<input type="time" class="form-control" id="nuevoHorarioOUT" required>
					</div>
					<div class="col-md-12">
						<label class="form-label" for="nuevoUpload" value="">Foto (opcional)</label>
						<input type="file" class="form-control" accept=".jpg,.jpeg,.png" id="nuevoUpload" onchange="validateFileTypeNuevo()">
						<div class="invalid-feedback">
							La foto ingresada no es válida!
						</div>
					</div>
					<div style="display: none;">
						<input type="hidden" id="nuevaLatitud">
						<input type="hidden" id="nuevaLongitud">
					</div>
					<div class="modal-footer">
						@if (!User.IsInRole("Administrador"))
						{
							<button type="button" class="btn btn-primary" data-bs-dismiss="modal">Ok</button>
						}
						else
						{
							<div class="d-flex justify-content-center">
								<button tpye="button" class="btn btn-success mb-3 activo" onclick="aceptarTurno()" id="aceptar-button" data-bs-dismiss="modal">Aceptar</button>
								<button tpye="button" class="btn btn-danger mx-2 mb-3" onclick="rechazarTurno()" id="rechazar-button" data-bs-dismiss="modal">Rechazar</button>
								
							</div>
						}
					</div>
				</form>
			</div>
		</div>
	</div>
</div>




<!--Inicio Modal Solicitar turno-->
<div class="modal fade" id="ModalDatosTurno" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h1 class="modal-title fs-5" id="staticBackdropLabel">
					<i class="fa-solid fa-envelope fa-xl"></i>
					Solicitud de turno
				</h1>
				<!--<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>-->
			</div>
			<div class="modal-body">
				<form autocomplete="off" class="row g-3 needs-validation" id="form-turnos" novalidate data-usuario-mail="@User.FindFirstValue("email")">

					<div class="col-md-12">
						<label for="cantidadMascotas" class="form-label">Mascotas afectadas por el turno</label>
						<select name="cantidadMascotas" required>


							
							<option selected>1</option>
							<option>2</option>
							<option>3</option>
							<option>4</option>
							<option>5</option>


						</select>
					</div>

					<div id="mascota1" class="col-md-12 mascota ">
						<label for="misMascotas" class="form-label ">Seleccione a su mascota</label>
						<select name="misMascotas" required>
							
							<option class="otraMascota">Otra</option>
						</select>
						<div class="otra d-none">
							<label class="form-label">Nombre</label>
							<input type="text" maxlength="20" class="form-control"  required>
							<div class="invalid-feedback">
								Ingrese una mascota no registrada
							</div>
						</div>
					</div>

					<div id="mascota2" class="col-md-12 mascota d-none">
						<label for="remitente" class="form-label ">Seleccione a su mascota</label>
						<select name="misMascotas" required>
							
							<option class="otraMascota">Otra</option>
						</select>
						<div class="d-none otra">
							<label class="form-label">Nombre</label>
							<input type="text" maxlength="20" class="form-control" required>
							<div class="invalid-feedback">
								Ingrese una mascota no registrada
							</div>
						</div>
					</div>
					<div id="mascota3" class="col-md-12 mascota d-none">
						<label for="misMascotas" class="form-label ">Seleccione a su mascota</label>
						<select name="misMascotas"  required>
							
							<option class="otraMascota">Otra</option>
						</select>
						<div class="d-none otra">
							<label class="form-label">Nombre</label>
							<input type="text" maxlength="20" class="form-control" required>
							<div class="invalid-feedback">
								Ingrese una mascota no registrada
							</div>
						</div>
					</div>
					<div id="mascota4" class="col-md-12 mascota d-none">
						<label for="misMascotas" class="form-label ">Seleccione a su mascota</label>
						<select name="misMascotas" required>

							<option class="otraMascota">Otra</option>
						</select>
						<div class="d-none otra">
							<label class="form-label">Nombre</label>
							<input type="text" maxlength="20" class="form-control"  required>
							<div class="invalid-feedback">
								Ingrese una mascota no registrada
							</div>
						</div>
					</div>
					<div id="mascota5" class="col-md-12 mascota d-none">
						<label for="misMascotas" class="form-label ">Seleccione a su mascota</label>
						<select name="misMascotas" required>
							
							<option class="otraMascota">Otra</option>
						</select>
						<div class="d-none otra">
							<label class="form-label">Nombre</label>
							<input type="text" maxlength="20" class="form-control" required>
							<div class="invalid-feedback">
								Ingrese una mascota no registrada
							</div>
						</div>
					</div>



					<div class="col-md-12">
						<label for="destinatario" class="form-label">Franja horaria</label>
						<select id="horario">
							<option selected id="franjaMañana">Mañana (8 a 13 hs)</option>
							<option id="franjaTarde">Tarde (17 a 20 hs)</option>
						</select>
					</div>



					<div class="col-md-12">
						<label for="validationCustom01" class="form-label">Motivo</label>
						<input type="text" class="form-control" maxlength="50" id="motivo" name="motivo" required>
						<div class="invalid-feedback">
							Ingrese el motivo de su turno! (máximo 50 caracteres)
						</div>
					</div>

					<div class="modal-footer">

						
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="cancel-button">Cancelar</button>
						<button type="button" class="btn btn-primary" data-bs-dismiss="modal" disabled id="BtnTurno">Aceptar</button>
					</div>
				</form>
			</div>
		</div>
	</div>
</div>
<!--Fin Modal Visualizar Paseador para contacto-->
@section Scripts{




	<!--Por cada mascota se da la opcion de seleccionar de entre sus mascotas o ingresar una nueva. Máximo 5 mascotas-->
	<script>
		
		//Ajax obtener mascotas de los turnos
		$(document).ready(function () {

			var asunto = document.getElementById('motivo');
			var enviarButtonContacto = document.getElementById('BtnTurno');
			function habilitarBotonEnvioContacto() {
				var val = true;
				for (i = 1; i <= $("select[name=cantidadMascotas]").val(); i++) {
					if ($("#mascota" + i + " select").hasClass("is-invalid") || (!$("#mascota" + i + " select").hasClass("is-valid"))) {
						val = false;
						break;
					}
				}
				if (asunto.classList.contains('is-valid') && val) {
					enviarButtonContacto.disabled = false;
				} else {
					enviarButtonContacto.disabled = true;
				}
			}




			var mascotasUsuario;
			function verificarFormulario() {
				asunto.addEventListener('input', validarAsunto);
				$("select[name=misMascotas]").on('input', function () {
					var valor = $(this).val();
					var esValido;
					var mascotaSeleccion = $(this);
					if (valor != 'Otra') {
						mascotaSeleccion.addClass('is-valid');
						mascotaSeleccion.removeClass('is-invalid');
						habilitarBotonEnvioContacto();
					}
					else {
						mascotaSeleccion.removeClass('is-valid');
						$(this).parent().find("div input").on('input', function () {
							var valorBuscar = $(this).val();
							var etiqueta = $(this);
							if (valorBuscar == '') {
								mascotaSeleccion.removeClass('is-valid');
								mascotaSeleccion.addClass('is-invalid');
								etiqueta.removeClass('is-valid');
								etiqueta.addClass('is-invalid');
								habilitarBotonEnvioContacto();
							}
							else {
								var encontre = false;
								$.each(mascotasUsuario, function (index, perro) {
									if (valorBuscar.toLowerCase() == perro.Nombre.toLowerCase()) {

										mascotaSeleccion.removeClass('is-valid');
										mascotaSeleccion.addClass('is-invalid');
										etiqueta.removeClass('is-valid');
										etiqueta.addClass('is-invalid');
										encontre = true;
										return false;
									}

								});
								if (!encontre) {
									mascotaSeleccion.removeClass('is-invalid');
									mascotaSeleccion.addClass('is-valid');
									etiqueta.removeClass('is-invalid');
									etiqueta.addClass('is-valid');
								}
								habilitarBotonEnvioContacto();
							}
						});
					}
				});



				function validarAsunto() {
					if (asunto.value.trim() !== '') {
						asunto.classList.remove('is-invalid');
						asunto.classList.add('is-valid');
					} else {
						asunto.classList.remove('is-valid');
						asunto.classList.add('is-invalid');
					}

					habilitarBotonEnvioContacto();
				}
				// Habilitar o deshabilitar el botón de envío según la validez del formulario
				

				$("#cancel-button").click(function () {
					var seleccion = $("#horario").prop("selectedIndex");
					document.getElementById('form-turnos').reset();
					$("#horario").prop("selectedIndex", seleccion);
					$("select[name=misMascotas]").prop("selectedIndex", 0);
					$("select[name=misMascotas]").find('option:eq(0)').prop("hidden", true);
					$("#dialog").hide(250);
					$("select[name=misMascotas]").find('option').prop('disabled', false);
					$("select[name=misMascotas]").removeClass('is-valid');
					$("select[name=misMascotas]").removeClass('is-invalid');
					$("select[name=misMascotas]").parent().find("div input").removeClass('is-valid');
					$("select[name=misMascotas]").parent().find("div input").removeClass('is-invalid');
					asunto.classList.remove('is-invalid'); asunto.classList.remove('is-valid');
					$(".otra").addClass("d-none");
					$(".mascota").addClass("d-none");
					$("#mascota1").removeClass("d-none");
					enviarButtonContacto.disabled = true;
					$(".events-container").show();
				});

			}







			function cambiarCantidad () {
				
				$("select[name=misMascotas]").prop("selectedIndex", 0);
				$("select[name=misMascotas]").find('option:eq(0)').prop("hidden", true);
				$("select[name=cantidadMascotas]").change(function () {
					var selectedValue = parseInt($(this).val());
					for (i = 5; i > selectedValue; i--) {
						var aDesocupar = $("#mascota" + i + " select option:selected").val();
						$("select[name=misMascotas]").find('option:contains("' + aDesocupar + '")').prop('disabled', false);
						var valor=i-1;
						$("select[name=misMascotas]:eq(" + valor + ")").parent().find("div").addClass("d-none");
						$("#mascota" + i + " select").removeClass("is-valid");
						$("#mascota" + i + " select").removeClass("is-invalid");
						$("#mascota" + i + " div input").removeClass("is-invalid");
						$("#mascota" + i + " div input").val("");
						$("#mascota" + i + " div input").removeClass("is-valid");
						$("select[name=misMascotas]:eq(" +valor+ ")").prop("selectedIndex", 0);

					}
					for (i = 1; i <= selectedValue; i++) {
						var aOcupar = $("#mascota" + i + " select option:selected").val();
						if (aOcupar!='Otra'){
						$("select[name=misMascotas]").find('option:contains("' + aOcupar + '")').prop('disabled', true);
						}
					}
					$(".mascota").addClass("d-none");
					for (i = 1; i <= selectedValue; i++) {
						$("#mascota" + i).removeClass("d-none");
					}
					habilitarBotonEnvioContacto();
				});
			};

			var previous;
			function cambiarValor () {
				$("select[name=misMascotas]").on('focus', function () {
					previous = this.value;
				})
					.change(function () {
						var actual = this.value;
						$("select[name=misMascotas]").find('option:contains("' + previous + '")').prop('disabled', false);
						if (!(actual == "Otra")) {
							$(this).parent().find('div').addClass("d-none");
							$("select[name=misMascotas]").find('option:contains("' + actual + '")').prop('disabled', true);
						} else {
							$(this).parent().find('div').removeClass("d-none");
						}
						previous = this.value;
						habilitarBotonEnvioContacto();
					});
			};
			var emailUsuario = $("#form-turnos").data('usuario-mail'); // Obtener el valor del campo de entrada de 
			$.ajax({
				url: '@Url.Action("obtenerPerros", "Turnos")',
				type: 'GET',
				dataType: 'json',
				data: { mail: emailUsuario }, // Enviar los datos al controlador
				success: function (data) {
				mascotasUsuario=data.slice();	
					//Recibe una lista de perros e itera para agregarlos por unica vez a las opciones.
					for (i=1; i<=5;i++)
					{
						$.each(data, function (index, perro) {
							
							var nodoOpcion=$("<option class='otraMascota'>" + perro.Nombre+"</option>");
							var clonNodo=nodoOpcion.clone();
							$("#mascota"+i+ " select").prepend(clonNodo);
						});		
						var nodoOpcion = $("<option class='otraMascota'>Seleccione una opcion</option>");
						var clonNodo = nodoOpcion.clone();
						$("#mascota" + i + " select").prepend(clonNodo);
					}		
					cambiarCantidad();
					cambiarValor();
					$("#add-button").prop("disabled",false);
					verificarFormulario();

				},
				error: function (xhr, status, error) {
					Swal.fire({
						icon: 'error',
						title: 'Oops...',
						text: 'Ocurrio un erorr!'
					})
				}
			});
		});

	</script>

	<script>
		$(document).on('click', '#add-button', function () {
			
		//	Muestra la solicitud del turno
			$('#ModalDatosTurno').modal('show');
		});

		
	</script>


	<script>

		var event_data = {
			"events": [

			]
		};




		


			

			
			 function cargar_eventos() {
				var emailUsuario = $("section").data('usuario-mail');
				$.ajax({
					url: '@Url.Action("obtenerEventos", "Turnos")',
					type: 'GET',
					async:false,
					dataType: 'json',
					data: { mail: emailUsuario }, // Enviar los datos al controlador
					success: function (data) {
						
						if (data.admin) {

							var turnosAsignados = JSON.parse(data.turnos);
							event_data["events"].push(true);
							$.each(turnosAsignados, function (index, turno) {
								event_data["events"].push(turno);
								
							})
							
						}
						else {
							var turnosAsignados = JSON.parse(data.turnos);
							event_data["events"].push(false);
							$.each(turnosAsignados, function (index, turno) {
								event_data["events"].push(turno);

							})
						}
					},
					error: function (xhr, status, error) {
						Swal.fire({
							icon: 'error',
							title: 'Oops...',
							text: 'Ocurrio un erorr!'
						})
					}
				});
				
			}



			"use strict";
			const meses = {
				"Ene": 0,
				"Feb": 1,
				"Mar": 2,
				"Abr": 3,
				"May": 4,
				"Jun": 5,
				"Jul": 6,
				"Ago": 7,
				"Sep": 8,
				"Oct": 9,
				"Nov": 10,
				"Dic": 11
			};
			// Setup the calendar with the current date
			$(document).ready( function () {
				var date = new Date();
				var today = date.getDate();
				cargar_eventos();
				// Set click handlers for DOM elements
				$(".right-button").click({ date: date }, next_year);
				$(".left-button").click({ date: date }, prev_year);
				$(".month").click({ date: date }, month_click);
				$("#add-button").click({ date: date }, new_event);
				// Set current month as active
				$(".months-row").children().eq(date.getMonth()).addClass("active-month");
				
				init_calendar(date);
				var events = chequear_events(today, date.getMonth() + 1, date.getFullYear());
				mostrar_eventos(events, date.getMonth() + 1, today);
				
			});
			




			var actual;
			function verificarFechas() {
				var date = new Date();
				actual = new Date(($("#label.year").html()), meses[($(".active-month").html())], parseInt($(".active-date").html()));
				$("#horario").prop("selectedIndex", 0);
				$("#franjaMañana").prop("disabled", false);
				$("#franjaTarde").prop("disabled", false);
				if (($("#label.year").html()) < date.getFullYear()) {
					$("#add-button").addClass("d-none");
					return;
				}
				if ((($("#label.year").html()) == date.getFullYear())
					&& (meses[($(".active-month").html())] < date.getMonth())) {
					$("#add-button").addClass("d-none");
					return;
				}

				if ((($("#label.year").html() == date.getFullYear())
					&& (meses[($(".active-month").html())] == date.getMonth()))
					&& (parseInt($(".active-date").html()) < date.getDate())) {
					$("#add-button").addClass("d-none");
					return;
				}

				if (actual.getDay() == 0) {
					$("#add-button").addClass("d-none");
					return;
				}

				if (actual.getDay() == 6 && date.getHours()>=8 && date.getDay() == 6) {
					$("#add-button").addClass("d-none");
					return;
				}else
					if (actual.getDay() == 6){

						$("#franjaTarde").prop("disabled", true);
					}
				

				if ((($("#label.year").html() == date.getFullYear())
					&& (meses[($(".active-month").html())] == date.getMonth()))
					&& (parseInt($(".active-date").html()) == date.getDate()) && (date.getHours() >=17)){
					$("#add-button").addClass("d-none");
					return;
				}

				if ((($("#label.year").html() == date.getFullYear())
					&& (meses[($(".active-month").html())] == date.getMonth()))
					&& (parseInt($(".active-date").html()) == date.getDate()) && (date.getHours()>=8)) {
					$("#franjaMañana").prop("disabled", true);
					$("#horario").prop("selectedIndex", 1);

				}
				$("#add-button").removeClass("d-none");
			}

		

			// Initialize the calendar by appending the HTML dates
			function init_calendar(date) {
				$(".tbody").empty();
				$(".events-container").empty();
				var calendar_days = $(".tbody");
				var month = date.getMonth();
				var year = date.getFullYear();
				var day_count = days_in_month(month, year);
				var row = $("<tr class='table-row'></tr>");
				var today = date.getDate();


				// Set date to 1 to find the first day of the month
				date.setDate(1);
				var first_day = date.getDay();
				// 35+firstDay is the number of date elements to be added to the dates table
				// 35 is from (7 days in a week) * (up to 5 rows of dates in a month)
				for (var i = 0; i < 35 + first_day; i++) {
					// Since some of the elements will be blank,
					// need to calculate actual date from index
					var day = i - first_day + 1;
					// If it is a sunday, make a new row
					if (i % 7 === 0) {

						calendar_days.append(row);
						row = $("<tr class='table-row'></tr>");
					}
					// if current index isn't a day in this month, make it blank
					if (i < first_day || day > day_count) {
						var curr_date = $("<td class='table-date nil'>" + "</td>");
						row.append(curr_date);
					}
					else {
						var curr_date = $("<td class='table-date'>" + day + "</td>");
						var events = chequear_events(day, month + 1, year);
						if (today === day && $(".active-date").length === 0) {
							curr_date.addClass("active-date");
							//show_events(events, months[month], day);
							mostrar_eventos(events,month+1, day);
						}
						//Ver despuès
						// If this date has any events, style it with .event-date
						if (events.length > 1) {
							
							curr_date.addClass("event-date");
						}
						// Set onClick handler for clicking a date
						curr_date.click({ events: events, month: month, day: day }, date_click);
						row.append(curr_date);
					}
				}
				// Append the last row and set the current year
				calendar_days.append(row);
				$(".year").text(year);
				verificarFechas();
			}

			// Get the number of days in a given month/year
			function days_in_month(month, year) {
				var monthStart = new Date(year, month, 1);
				var monthEnd = new Date(year, month + 1, 1);
				return (monthEnd - monthStart) / (1000 * 60 * 60 * 24);
			}

			// Event handler for when a date is clicked
			function date_click(event) {
				$(".events-container").show(250);
				$("#dialog").hide(250);
				$(".active-date").removeClass("active-date");
				$(this).addClass("active-date");
				verificarFechas();
				//_events(event.data.events, event.data.month, event.data.day);
				mostrar_eventos(event.data.events, event.data.month +1, event.data.day);
			};

			// Event handler for when a month is clicked
			function month_click(event) {
				$(".events-container").show(250);
				$("#dialog").hide(250);
				var date = event.data.date;
				$(".active-month").removeClass("active-month");
				$(this).addClass("active-month");
				var new_month = $(".month").index(this);
				date.setMonth(new_month);
				init_calendar(date);
			}

			// Event handler for when the year right-button is clicked
			function next_year(event) {
				$("#dialog").hide(250);
				var date = event.data.date;
				var new_year = date.getFullYear() + 1;
				$("year").html(new_year);
				date.setFullYear(new_year);
				init_calendar(date);
			}

			// Event handler for when the year left-button is clicked
			function prev_year(event) {
				$("#dialog").hide(250);
				var date = event.data.date;
				var new_year = date.getFullYear() - 1;
				$("year").html(new_year);
				date.setFullYear(new_year);
				init_calendar(date);
			}

			// Event handler for clicking the new event button
			function new_event(event) {
				// if a date isn't selected then do nothing
				if ($(".active-date").length === 0)
					return;
				// remove red error input on click
				// empty inputs and hide events
				$("#dialog input[type=text]").val('');
				$("#dialog input[type=number]").val('');
				$(".events-container").hide(0);
				$("#dialog").show(250);
				// Event handler for cancel button
				// Event handler for ok button
				$("#BtnTurno").unbind().click({ date: event.data.date }, function () {
					var date = event.data.date;
					var day = parseInt($(".active-date").html());
					$("#dialog").hide(250);
					console.log("new event");
					//Falta ajax. Hay que setear el turno para los que estàn registrados y agregar
					var nombrePerros = [];
					var valor = $("select[name=cantidadMascotas]").val();
					for (i = 1; i <= valor; i++) {
						var mascota = $("#mascota" + i + " select option:selected").val();
						if (mascota == 'Otra') {
							mascota = $("#mascota" + i + " div input").val();
						}
						nombrePerros.push(mascota);
					}

					var emailUsuario = $("#form-turnos").data('usuario-mail');
					var motive = document.getElementById('motivo').value;
					
				
					var fechaIso = actual.toISOString();
					var horarioSel=$("#horario").prop("selectedIndex");
					
					$.ajax({
						url: '@Url.Action("cargarTurno", "Turnos")',
						type: 'POST',
						dataType: 'json',
						data: { mail: emailUsuario, fecha: fechaIso, perros: nombrePerros, motivo: motive,horario:horarioSel }, // Enviar los datos al controlador
						
						success: function (data) {
							var turno=JSON.parse(data.asignado);
							event_data["events"].push(turno);
						var asunto = document.getElementById('motivo');
						var seleccion = $("#horario").prop("selectedIndex");
						var enviarButtonContacto = document.getElementById('BtnTurno');
						document.getElementById('form-turnos').reset();
						$("#horario").prop("selectedIndex", seleccion);
						$("select[name=misMascotas]").prop("selectedIndex", 0);
						$("select[name=misMascotas]").find('option:eq(0)').prop("hidden", true);
						$("#dialog").hide(250);
						$("select[name=misMascotas]").find('option').prop('disabled', false);
						$("select[name=misMascotas]").removeClass('is-valid');
						$("select[name=misMascotas]").removeClass('is-invalid');
						$("select[name=misMascotas]").parent().find("div input").removeClass('is-valid');
						$("select[name=misMascotas]").parent().find("div input").removeClass('is-invalid');
						asunto.classList.remove('is-invalid'); asunto.classList.remove('is-valid');
						$(".otra").addClass("d-none");
						$(".mascota").addClass("d-none");
						$("#mascota1").removeClass("d-none");
						enviarButtonContacto.disabled = true;
						
						$(".events-container").show();
						date.setDate(day);
							init_calendar(date);
							
							//new_event_json(name, count, date, day);
						},
						error: function (xhr, status, error) {
							Swal.fire({
								icon: 'error',
								title: 'Oops...',
								text: 'Ocurrio un erorr!'
							})
						}
					});

					
					

				});


			}
		


			// Given data for events in JSON format

			



			function chequear_events(day, month, year) {
				var events = [];
				var actual=new Date(year,month-1,day);
				
				
				var fechaIso=actual.toISOString();
				fechaIso=fechaIso.substr(0,10);
				events.push(event_data["events"][0]);
				
				for (var i = 1; i < event_data["events"].length; i++) {
					
					var event = event_data["events"][i];
					
					var fechaDb=(event.Fecha.substr(0,10));
					
					if (fechaDb==fechaIso) {
						events.push(event);
					
					}
				}
				return events;
			}


			function mostrar_eventos(events,month,day){
				var evento;
				$(".events-container").empty();
				$(".events-container").show(250);
				
				if (events[0]==true) {


				if (((events.filter(m => m.Estado == 3).length == 0) && ($("#pendientes-button").hasClass("activa")))
					|| ((events.filter(m => m.Estado == 2).length == 0) && ($("#rechazados-button").hasClass("activa")))
						|| ((events.filter(m => m.Estado == 1).length == 0) && ($("#aceptados-button").hasClass("activa"))))
					{
						var event_card = $("<div class='event-card d-flex flex-column'></div>");
						var event_name = $("<div class='event-name mb-3'>No tiene turnos para el " + day + "/" + month + ".</div>");
						$(event_card).css({ "border-left": "10px solid #FF1744" });
						$(event_card).append(event_name);
						$(".events-container").append(event_card);
					}
					else {
					
						// Go through and add each event as a card to the events container
						for (var i = 1; i < events.length; i++) {
							var event_card = $("<div class='event-card'></div>");
							var event_name = $("<div class='event-name'>" + events[i].Motivo + ":</div>");
							var event_count = $("<div class='event-count'>" + events[i].Motivo + " Invited</div>");
							if($("#rechazados-button").hasClass("activa")){
								if (events[i]["Estado"] === 2) {
									$(event_card).css({
									"border-left": "10px solid #FF1744"
								});
							event_count = $("<div class='event-cancelled'>Cancelado</div>");
							}
							}else if($("#aceptados-button").hasClass("activa")){
							if (events[i]["Estado"] === 1) {
								$(event_card).css({
									"border-left": "10px solid #FF1744"
								});
								event_count = $("<div class='event-cancelled'>Aceptado</div>");
							}
							}else{
							if (events[i]["Estado"] === 3) {
								$(event_card).css({
									"border-left": "10px solid #FF1744"
								});
								event_count = $("<div class='event-cancelled'>Pendiente</div>");
								
							}
							}
						var event_button = $("<button class='btn btn-primary align-self-end'   onclick='verDetalle(" + events[i].Id + ")' >Ver detalle</button>")
						$(event_card).append(event_name).append(event_count);
						$(event_card).append(event_button);
						$(".events-container").append(event_card);
						
						}
					}
				}
				else {

					if (events.length == 1) {

						var event_card = $("<div class='event-card d-flex flex-column'></div>");
						var event_name = $("<div class='event-name mb-3'>No tiene turnos para el " + day + " de " + month + ".</div>");
						$(event_card).css({ "border-left": "10px solid #FF1744" });

						$(event_card).append(event_name);

						$(".events-container").append(event_card);
					}
					else {
						
						// Go through and add each event as a card to the events container
						var event_card = $("<div class='event-card'></div>");

						var event_name = $("<div class='event-name'>" + events[1].Motivo + ":</div>");
						var event_count = $("<div class='event-count'>" + events[1].Motivo + " Invited</div>");
						if (events[1].Estado === 2) {
							$(event_card).css({
								"border-left": "10px solid #FF1744"
							});
							event_count = $("<div class='event-cancelled'>Cancelado</div>");
						} else {
							if (events[1].Estado == 1) {
								$(event_card).css({
									"border-left": "10px solid #6aa84f"
								});
								event_count = $("<div class='event-cancelled'>Aceptado</div>");
							} else {

								$(event_card).css({
									"border-left": "10px solid #f1c232"
								});
								event_count = $("<div class='event-cancelled'>Pendiente</div>");

							}
						}


					var event_button = $("<button class='btn btn-primary align-self-end' onclick='verDetalle(" + events[1].Id + ")' >Ver detalle</button>")
						$(event_card).append(event_name).append(event_count);
						$(event_card).append(event_button);
						$(".events-container").append(event_card);
					}
				}
			}


		

		function verDetalle(idTurno) {
			var turno=event_data["events"].filter(m=>m.Id==idTurno);
			
			if(turno[0].Estado==1){
				
				$("#detalleAceptado").modal("show");
			} else if (turno[0].Estado == 2){
				$("#detalleRechazado").modal("show");
			}
			else{
				$("#rechazar-button").attr("data-id-turno",idTurno);
				$("#aceptar-button").attr("data-id-turno", idTurno);
				$("#detallePendiente").modal("show");
			}
			
		}



		function rechazarTurno(){
			$(".events-container").empty();
			var idTurno=$("#rechazar-button").data("id-turno");
			var turno = event_data["events"].filter(m => m.Id == idTurno);
			turno[0].Estado=2;
			var index = event_data["events"].findIndex(el => el.Id === idTurno);
			alert
			event_data["events"][index]=turno[0];

			$.ajax({
				url: '@Url.Action("rechazarTurno", "Turnos")',
				type: 'POST',
				async: true,
				dataType: 'json',
				data: { idTurno: idTurno }, // Enviar los datos al controlador
				success: function (data) {
					$(".events-container").empty();
					var date = new date(turno[0].Fecha.substr(0, 10));
					var day = parseInt($(".active-date").html());
					date.setDate(day);
					init_calendar(date);
				},
				error: function (xhr, status, error) {
					Swal.fire({
						icon: 'error',
						title: 'Oops...',
						text: 'Ocurrio un erorr!'
					})
				}
			});
		}
		$("#aceptados-button").on('click',function(){
			if (!($("#aceptados-button").hasClass("activa")))
			{	$("#rechazados-button").removeClass("activa");
				$("#pendientes-button").removeClass("activa");
				$("#aceptados-button").addClass("activa");
				$(".events-container").empty();
				var fecha = new Date();
				fecha.setFullYear($("#label.year").html());
				fecha.setMonth(meses[($(".active-month").html())]);
				fecha.setDate(parseInt($(".active-date").html()));
				init_calendar(fecha);
			}

		});

		$("#rechazados-button").on('click', function () {
			if (!($("#rechazados-button").hasClass("activa"))) {
				$("#aceptados-button").removeClass("activa");
				$("#pendientes-button").removeClass("activa");
				$("#rechazados-button").addClass("activa");
				$(".events-container").empty();
				var fecha = new Date();
				fecha.setFullYear($("#label.year").html());
				fecha.setMonth(meses[($(".active-month").html())]);
				fecha.setDate(parseInt($(".active-date").html()));
				init_calendar(fecha);
			}

		});
		$("#pendientes-button").on('click', function () {
			if (!($("#pendientes-button").hasClass("activa"))) {
				$("#rechazados-button").removeClass("activa");
				$("#aceptados-button").removeClass("activa");
				$("#pendientes-button").addClass("activa");
				$(".events-container").empty();
				var fecha = new Date();
				fecha.setFullYear($("#label.year").html());
				fecha.setMonth(meses[($(".active-month").html())]);
				fecha.setDate(parseInt($(".active-date").html()));
				init_calendar(fecha);
			}

		});


		function aceptarTurno() {
			$(".events-container").empty();
				var idTurno = $("#aceptar-button").data("id-turno");
				
				var turno = event_data["events"].filter(m => m.Id == idTurno);
				turno[0].Estado = 1;
				var index = event_data["events"].findIndex(el => el.Id === idTurno);
				
				event_data["events"][index] = turno[0];
			$.ajax({
				url: '@Url.Action("aceptarTurno", "Turnos")',
				type: 'POST',
				async: true,
				dataType: 'json',
				data: { idTurno: idTurno }, // Enviar los datos al controlador
				success: function (data) {
					$(".events-container").empty();
					var date = new date(turno[0].Fecha.substr(0, 10));
					var day = parseInt($(".active-date").html());
					date.setDate(day);
					init_calendar(date);
				},
				error: function (xhr, status, error) {
					Swal.fire({
						icon: 'error',
						title: 'Oops...',
						text: 'Ocurrio un erorr!'
					})
				}
			});

		}


	</script>
}
