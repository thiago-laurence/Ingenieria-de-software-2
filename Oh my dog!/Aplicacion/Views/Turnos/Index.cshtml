@model IEnumerable<Aplicacion.Models.Turnos>
@using Microsoft.AspNetCore.Identity;
@using System.Security.Claims;

@{
	ViewData["Title"] = "Index";
}
<link href="https://fonts.googleapis.com/css?family=Lato:300,400,700&display=swap" rel="stylesheet">

<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" href="css/estiloCalendario.css">


@if (User.Identity.IsAuthenticated)
{
	@if (!User.IsInRole("Administrador"))
	{
		<section class="ftco-section">
			<div class="container">
				<div class="row ">
					<div class="col-xl-12 ">
						<div class="content w-100">
							<div class="calendar-container">
								<div class="calendar">
									<div class="year-header">
										<span class="left-button fa fa-chevron-left" id="prev"> </span>
										<span class="year" id="label"></span>
										<span class="right-button fa fa-chevron-right" id="next"> </span>
									</div>
									<table class="months-table w-100">
										<tbody>
											<tr class="months-row">
												<td class="month">Ene</td>
												<td class="month">Feb</td>
												<td class="month">Mar</td>
												<td class="month">Abr</td>
												<td class="month">May</td>
												<td class="month">Jun</td>
												<td class="month">Jul</td>
												<td class="month">Ago</td>
												<td class="month">Sep</td>
												<td class="month">Oct</td>
												<td class="month">Nov</td>
												<td class="month">Dic</td>
											</tr>
										</tbody>
									</table>

									<table class="days-table w-100">
										<td class="day">Dom</td>
										<td class="day">Lun</td>
										<td class="day">Mar</td>
										<td class="day">Mie</td>
										<td class="day">Jue</td>
										<td class="day">Vie</td>
										<td class="day">Sab</td>
									</table>
									<div class="frame">
										<table class="dates-table w-100">
											<tbody class="tbody">
											</tbody>
										</table>
									</div>
									<button class="button d-none" id="add-button">Solicitar turno</button>
								</div>
							</div>
							<div class="events-container">
							</div>


							
		</section>
	}
	else
	{
		<section class="ftco-section">
			<div class="container">

				<div class="row  ">
					<div class="col-md-12 ">
						<div class="content w-100">
							<div class="calendar-container">
								<div class="calendar">
									<div class="year-header">
										<span class="left-button fa fa-chevron-left" id="prev"> </span>
										<span class="year" id="label"></span>
										<span class="right-button fa fa-chevron-right" id="next"> </span>
									</div>
									<table class="months-table w-100">
										<tbody>
											<tr class="months-row">
												<td class="month">Ene</td>
												<td class="month">Feb</td>
												<td class="month">Mar</td>
												<td class="month">Abr</td>
												<td class="month">May</td>
												<td class="month">Jun</td>
												<td class="month">Jul</td>
												<td class="month">Ago</td>
												<td class="month">Sep</td>
												<td class="month">Oct</td>
												<td class="month">Nov</td>
												<td class="month">Dic</td>
											</tr>
										</tbody>
									</table>

									<table class="days-table w-100">
										<td class="day">Dom</td>
										<td class="day">Lun</td>
										<td class="day">Mar</td>
										<td class="day">Mie</td>
										<td class="day">Jue</td>
										<td class="day">Vie</td>
										<td class="day">Sab</td>
									</table>
									<div class="frame">
										<table class="dates-table w-100">
											<tbody class="tbody">
											</tbody>
										</table>
									</div>
									<button class="button" id="add-button">Add Event</button>
								</div>
							</div>

							<div class="events-container">
							</div>

							<div class="dialog" id="dialog">
								<h2 class="dialog-header"> Add New Event </h2>
								<form class="form" id="form">
									<div class="form-container" align="center">
										<label class="form-label" id="valueFromMyButton" for="name">Event name</label>
										<input class="input" type="text" id="name" maxlength="36">
										<label class="form-label" id="valueFromMyButton" for="count">Number of people to invite</label>
										<input class="input" type="number" id="count" min="0" max="1000000" maxlength="7">
										<input type="button" value="Cancel" class="button" id="">
										<input type="button" value="OK" class="button button-white" id="ok-button">
									</div>
								</form>
							</div>
						</div>
					</div>
				</div>
			</div>
		</section>
	}




}
else
{
	<div class="container d-flex align-items-center justify-content-center">
		<h1>
			Para acceder a este sitio debe estar registrado.
		</h1>
		<img class="w-50 h-50" src="/img/PerroError.svg" />
	</div>
}

<!--Inicio Modal Solicitar turno-->
<div class="modal fade" id="ModalDatosTurno" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h1 class="modal-title fs-5" id="staticBackdropLabel">
					<i class="fa-solid fa-envelope fa-xl"></i>
					Solicitud de turno
				</h1>
				<!--<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>-->
			</div>
			<div class="modal-body">
				<form autocomplete="off" class="row g-3 needs-validation" novalidate id="formContactoPaseador">

					<div class="col-md-12">
						<label for="remitente" class="form-label">Mascotas afectadas por el turno</label>
						<select name="cantidadMascotas" required>


							<option value="" disabled selected hidden>--Seleccione una opcion--</option>
							<option>1</option>
							<option>2</option>
							<option>3</option>
							<option>4</option>
							<option>5</option>


						</select>
					</div>

					<div id="mascota1" class="col-md-12 mascota d-none">
						<label for="remitente" class="form-label ">Seleccione a su mascota</label>
						<select required id="seleccionMascota1">
							<option disabled selected hidden class="opcion_default">--Seleccione una opción--</option>
							<option class="otraMascota">Otra</option>
						</select>
						<div>
							<label class="form-label">Nombre</label>
							<input type="text" maxlength="20" class="form-control" id="nombre" required>
							<div class="invalid-feedback">
								Ingrese un nombre!
							</div>
						</div>
					</div>

					<div id="mascota2" class="col-md-12 mascota d-none">
						<label for="remitente" class="form-label ">Seleccione a su mascota</label>
						<select required id="seleccionMascota1">
							<option disabled selected hidden class="opcion_default">--Seleccione una opción--</option>
							<option class="otraMascota">Otra</option>
						</select>
						<div>
							<label class="form-label">Nombre</label>
							<input type="text" maxlength="20" class="form-control" id="nombre" required>
							<div class="invalid-feedback">
								Ingrese un nombre!
							</div>
						</div>
					</div>
					<div id="mascota3" class="col-md-12 mascota d-none">
						<label for="remitente" class="form-label ">Seleccione a su mascota</label>
						<select required id="seleccionMascota1">
							<option disabled selected hidden class="opcion_default">--Seleccione una opción--</option>
							<option class="otraMascota">Otra</option>
						</select>
						<div>
							<label class="form-label">Nombre</label>
							<input type="text" maxlength="20" class="form-control" id="nombre" required>
							<div class="invalid-feedback">
								Ingrese un nombre!
							</div>
						</div>
					</div>
					<div id="mascota4" class="col-md-12 mascota d-none">
						<label for="remitente" class="form-label ">Seleccione a su mascota</label>
						<select required id="seleccionMascota1">
							<option disabled selected hidden class="opcion_default">--Seleccione una opción--</option>
							<option class="otraMascota">Otra</option>
						</select>
						<div>
							<label class="form-label">Nombre</label>
							<input type="text" maxlength="20" class="form-control" id="nombre" required>
							<div class="invalid-feedback">
								Ingrese un nombre!
							</div>
						</div>
					</div>
					<div id="mascota5" class="col-md-12 mascota d-none">
						<label for="remitente" class="form-label ">Seleccione a su mascota</label>
						<select required id="seleccionMascota1">
							<option disabled selected hidden class="opcion_default">--Seleccione una opción--</option>
							<option class="otraMascota">Otra</option>
						</select>
						<div>
							<label class="form-label">Nombre</label>
							<input type="text" maxlength="20" class="form-control" id="nombre" required>
							<div class="invalid-feedback">
								Ingrese un nombre!
							</div>
						</div>
					</div>



					<div class="col-md-12">
						<label for="destinatario" class="form-label">Franja horaria</label>
						<select>
							<option id="franjaMañana">Mañana (8 a 13 hs)</option>
							<option id="franjaTarde">Tarde (17 a 20 hs</option>
						</select>
					</div>



					<div class="col-md-12">
						<label for="validationCustom01" class="form-label">Motivo</label>
						<input type="text" class="form-control" maxlength="50" id="Asunto" name="Asunto" required>
						<div class="invalid-feedback">
							Ingrese el motivo de su turno! (máximo 50 caracteres)
						</div>
					</div>

					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="cancel-button">Cancelar</button>
						<button type="button" class="btn btn-primary" onclick="enviarCorreoPaseador()" disabled id="BtnContacto">Aceptar</button>
					</div>
				</form>
			</div>
		</div>
	</div>
</div>
<!--Fin Modal Visualizar Paseador para contacto-->
@section Scripts{
	<!--Por cada mascota se da la opcion de seleccionar de entre sus mascotas o ingresar una nueva.-->
	<script>
		(function () {
		var previous;

		$("select[name=cantidadMascotas]").change(function() {
			
			for (i=1; i<=5;i++){
				$(".mascota").addClass("d-none");
			}
			


				for (i = 1; i <=this.value;i++)
			{
				$("#mascota"+i).removeClass("d-none");
			}
		});
	})();
	</script>




	<script>
		$(document).on('click', '#add-button', function () {
			
			//Obtener mascotas del usuario
			
			
			$('#ModalDatosTurno').modal('show');
		});
	</script>


	<!--Hay que modificarlo. En este caso mostraría el estado del turno.-->
	<script>
		function verDetalle() {

			$('#ModalDatosTurno').modal('show');
		}
	</script>


	<script>

		(function ($) {

			"use strict";
			const meses = {
				"Ene": 0,
				"Feb": 1,
				"Mar": 2,
				"Abr": 3,
				"May": 4,
				"Jun": 5,
				"Jul": 6,
				"Ago": 7,
				"Sep": 8,
				"Oct": 9,
				"Nov": 10,
				"Dic": 11
			};

			// Setup the calendar with the current date
			$(document).ready(function () {
				var date = new Date();
				var today = date.getDate();
				// Set click handlers for DOM elements
				$(".right-button").click({ date: date }, next_year);
				$(".left-button").click({ date: date }, prev_year);
				$(".month").click({ date: date }, month_click);
				$("#add-button").click({ date: date }, new_event);
				// Set current month as active
				$(".months-row").children().eq(date.getMonth()).addClass("active-month");
				init_calendar(date);
				var events = check_events(today, date.getMonth() + 1, date.getFullYear());
				show_events(events, months[date.getMonth()], today);
			});


			function verificarFechas() {
				var date = new Date();
				if (($("#label.year").html()) < date.getFullYear()) {
					$("#add-button").addClass("d-none");
				} else

					if ((($("#label.year").html()) == date.getFullYear())
						&& (meses[($(".active-month").html())] < date.getMonth())) {

						$("#add-button").addClass("d-none");


					} else

						if ((($("#label.year").html() == date.getFullYear())
							&& (meses[($(".active-month").html())] == date.getMonth()))
							&& (parseInt($(".active-date").html()) <= date.getDate())) {
							$("#add-button").addClass("d-none");

						} else {
							$("#add-button").removeClass("d-none");
						}
			}

			// Initialize the calendar by appending the HTML dates
			function init_calendar(date) {
				$(".tbody").empty();
				$(".events-container").empty();
				var calendar_days = $(".tbody");
				var month = date.getMonth();
				var year = date.getFullYear();
				var day_count = days_in_month(month, year);
				var row = $("<tr class='table-row'></tr>");
				var today = date.getDate();






				// Set date to 1 to find the first day of the month
				date.setDate(1);
				var first_day = date.getDay();
				// 35+firstDay is the number of date elements to be added to the dates table
				// 35 is from (7 days in a week) * (up to 5 rows of dates in a month)
				for (var i = 0; i < 35 + first_day; i++) {
					// Since some of the elements will be blank,
					// need to calculate actual date from index
					var day = i - first_day + 1;
					// If it is a sunday, make a new row
					if (i % 7 === 0) {
						calendar_days.append(row);
						row = $("<tr class='table-row'></tr>");
					}
					// if current index isn't a day in this month, make it blank
					if (i < first_day || day > day_count) {
						var curr_date = $("<td class='table-date nil'>" + "</td>");
						row.append(curr_date);
					}
					else {
						var curr_date = $("<td class='table-date'>" + day + "</td>");
						var events = check_events(day, month + 1, year);
						if (today === day && $(".active-date").length === 0) {
							curr_date.addClass("active-date");
							show_events(events, months[month], day);
						}
						// If this date has any events, style it with .event-date
						if (events.length !== 0) {
							curr_date.addClass("event-date");
						}
						// Set onClick handler for clicking a date
						curr_date.click({ events: events, month: months[month], day: day }, date_click);
						row.append(curr_date);
					}
				}
				// Append the last row and set the current year
				calendar_days.append(row);
				$(".year").text(year);
				verificarFechas();
			}

			// Get the number of days in a given month/year
			function days_in_month(month, year) {
				var monthStart = new Date(year, month, 1);
				var monthEnd = new Date(year, month + 1, 1);
				return (monthEnd - monthStart) / (1000 * 60 * 60 * 24);
			}

			// Event handler for when a date is clicked
			function date_click(event) {
				$(".events-container").show(250);
				$("#dialog").hide(250);
				$(".active-date").removeClass("active-date");
				$(this).addClass("active-date");
				verificarFechas();
				show_events(event.data.events, event.data.month, event.data.day);
			};

			// Event handler for when a month is clicked
			function month_click(event) {
				$(".events-container").show(250);
				$("#dialog").hide(250);
				var date = event.data.date;
				$(".active-month").removeClass("active-month");
				$(this).addClass("active-month");
				var new_month = $(".month").index(this);
				date.setMonth(new_month);
				init_calendar(date);
			}

			// Event handler for when the year right-button is clicked
			function next_year(event) {
				$("#dialog").hide(250);
				var date = event.data.date;
				var new_year = date.getFullYear() + 1;
				$("year").html(new_year);
				date.setFullYear(new_year);
				init_calendar(date);
			}

			// Event handler for when the year left-button is clicked
			function prev_year(event) {
				$("#dialog").hide(250);
				var date = event.data.date;
				var new_year = date.getFullYear() - 1;
				$("year").html(new_year);
				date.setFullYear(new_year);
				init_calendar(date);
			}

			// Event handler for clicking the new event button
			function new_event(event) {
				// if a date isn't selected then do nothing
				if ($(".active-date").length === 0)
					return;
				// remove red error input on click


				$("input").click(function () {
					$(this).removeClass("error-input");
				})
				// empty inputs and hide events
				$("#dialog input[type=text]").val('');
				$("#dialog input[type=number]").val('');
				$(".events-container").hide(0);
				$("#dialog").show(250);
				// Event handler for cancel button
				$("#cancel-button").click(function () {
					$("#name").removeClass("error-input");
					$("#count").removeClass("error-input");
					$("#dialog").hide(250);
					$(".events-container").show();
				});
				// Event handler for ok button
				$("#ok-button").unbind().click({ date: event.data.date }, function () {
					var date = event.data.date;
					var name = $("#name").val().trim();
					var count = parseInt($("#count").val().trim());
					var day = parseInt($(".active-date").html());
					// Basic form validation
					if (name.length === 0) {
						$("#name").addClass("error-input");
					}
					else if (isNaN(count)) {
						$("#count").addClass("error-input");
					}
					else {
						$("#dialog").hide(250);
						console.log("new event");
						new_event_json(name, count, date, day);
						date.setDate(day);
						init_calendar(date);
					}
				});


			}

			// Adds a json event to event_data
			function new_event_json(name, count, date, day) {
				var event = {
					"occasion": name,
					"invited_count": count,
					"year": date.getFullYear(),
					"month": date.getMonth() + 1,
					"day": day
				};
				event_data["events"].push(event);
			}

			// Display all events of the selected date in card views
			function show_events(events, month, day) {
				// Clear the dates container
				$(".events-container").empty();
				$(".events-container").show(250);
				console.log(event_data["events"]);
				// If there are no events for this date, notify the user
				if (events.length === 0) {
					var event_card = $("<div class='event-card d-flex flex-column'></div>");
					var event_name = $("<div class='event-name'>There are no events planned for " + month + " " + day + ".</div>");
					$(event_card).css({ "border-left": "10px solid #FF1744" });
					var event_button = $("<button class='btn btn-primary align-self-end ' onclick=verDetalle() >Ver detalle</button>")

					$(event_card).append(event_name);
					$(event_card).append(event_button);
					$(".events-container").append(event_card);
				}
				else {
					// Go through and add each event as a card to the events container
					for (var i = 0; i < events.length; i++) {
						var event_card = $("<div class='event-card'></div>");
						var event_name = $("<div class='event-name'>" + events[i]["occasion"] + ":</div>");
						var event_count = $("<div class='event-count'>" + events[i]["invited_count"] + " Invited</div>");
						if (events[i]["cancelled"] === true) {
							$(event_card).css({
								"border-left": "10px solid #FF1744"
							});
							event_count = $("<div class='event-cancelled'>Cancelled</div>");
						}
						$(event_card).append(event_name).append(event_count);
						$(".events-container").append(event_card);
					}
				}
			}

			// Checks if a specific date has any events
			function check_events(day, month, year) {
				var events = [];
				for (var i = 0; i < event_data["events"].length; i++) {
					var event = event_data["events"][i];
					if (event["day"] === day &&
						event["month"] === month &&
						event["year"] === year) {
						events.push(event);
					}
				}
				return events;
			}

			// Given data for events in JSON format
			var event_data = {
				"events": [
					{
						"occasion": " Repeated Test Event ",
						"invited_count": 120,
						"year": 2020,
						"month": 5,
						"day": 10,
						"cancelled": true
					},
					{
						"occasion": " Repeated Test Event ",
						"invited_count": 120,
						"year": 2020,
						"month": 5,
						"day": 10,
						"cancelled": true
					},
					{
						"occasion": " Repeated Test Event ",
						"invited_count": 120,
						"year": 2020,
						"month": 5,
						"day": 10,
						"cancelled": true
					},
					{
						"occasion": " Repeated Test Event ",
						"invited_count": 120,
						"year": 2020,
						"month": 5,
						"day": 10
					},
					{
						"occasion": " Repeated Test Event ",
						"invited_count": 120,
						"year": 2020,
						"month": 5,
						"day": 10,
						"cancelled": true
					},
					{
						"occasion": " Repeated Test Event ",
						"invited_count": 120,
						"year": 2020,
						"month": 5,
						"day": 10
					},
					{
						"occasion": " Repeated Test Event ",
						"invited_count": 120,
						"year": 2020,
						"month": 5,
						"day": 10,
						"cancelled": true
					},
					{
						"occasion": " Repeated Test Event ",
						"invited_count": 120,
						"year": 2020,
						"month": 5,
						"day": 10
					},
					{
						"occasion": " Repeated Test Event ",
						"invited_count": 120,
						"year": 2020,
						"month": 5,
						"day": 10,
						"cancelled": true
					},
					{
						"occasion": " Repeated Test Event ",
						"invited_count": 120,
						"year": 2020,
						"month": 5,
						"day": 10
					},
					{
						"occasion": " Test Event",
						"invited_count": 120,
						"year": 2020,
						"month": 5,
						"day": 11
					}
				]
			};
			const months = [
				"January",
				"February",
				"March",
				"April",
				"May",
				"June",
				"July",
				"August",
				"September",
				"October",
				"November",
				"December"
			];


		})(jQuery);


	</script>
}
