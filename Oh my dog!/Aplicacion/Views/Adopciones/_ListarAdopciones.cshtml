@using Microsoft.AspNetCore.Identity;
@using System.Security.Claims;
@model Aplicacion.Models.AdopcionViewModel
@{
    var anteriorDeshabilitado = !Model.Paginacion.PaginasAnteriores ? "disabled" : "";
    var siguienteDeshabilitado = !Model.Paginacion.PaginasSiguientes ? "disabled" : "";
    var filtroActual = "";
}

@if (Model.Paginacion.Count() == 0)
{
    <div class="text-center alert alert-info" role="alert">
        @if (Model.Origen)
        {
            <h3>No existen adopciones coincidentes con la busqueda</h3>
        }
        else
        {
            <h3>Aún no hay adopciones publicadas para visualizar</h3>
        }
    </div>
}
else
{
    <div class="container" id="contenedorCards">
        <div class="row">
            @foreach (var adopcion in Model.Paginacion)
            {
                <div class="col-md-3">
                    <div class="container-card shadow-lg">
                        <input type="hidden" id="adopcionId" value="@adopcion.Id" />
                        <div class="card mt-4 mb-4 @(adopcion.Estado == 1 ? "card-adoptado" : "" )" data-adopcion-id="@adopcion.Id" data-destinatario="@adopcion.Email" data-nombreperro="@adopcion.Nombre">
                            @if (adopcion.Estado == 1)
                            {
                                <img src="~/img/publicarAdopcion-icon.png" class="img-fluid mx-auto mt-2" style="width:8rem; height:8rem">
                            }
                            else
                            {
                                <img src="~/img/icon-adopcion-card.png" class="img-fluid mx-auto mt-2" alt="..." style="width:8rem; height:8rem">
                            }
                            <div class="card-body">
                                <h5 class="card-title text-center nombrePerro" id="nombrePerro">@adopcion.Nombre.ToUpper() @(adopcion.Estado == 1 ? "(ADOPTADO)" : "")</h5>
                                <p class="card-text"><strong>Email del publicador:</strong> @adopcion.Email</p>
                                <p class="card-text"><strong>Tamaño:</strong> @adopcion.Tamano</p>
                                <p class="card-text"><strong>Raza:</strong> @adopcion.Raza</p>
                                <p class="card-text"><strong>Sexo:</strong> @adopcion.Sexo</p>
                                <p class="card-text"><strong>Color:</strong> @adopcion.Color</p>
                                <p class="card-text"><strong>Descripción:</strong> @adopcion.Descripcion</p>
                            </div>
                            <div class="card-footer d-flex justify-content-center">
                                <div class="d-flex gap-3">
                                    @if (adopcion.Estado == 0)
                                    {
                                        <button class="btn btn-custom BtnVisualizarContacto" onclick="BtnVisualizarContacto('@adopcion.Id', '@User.FindFirstValue("Email")', '@adopcion.Email')" data-toggle="tooltip" data-placement="top" title="Contactar" data-remitente='@User.FindFirstValue("Email")' data-destinatario='@adopcion.Email'>
                                            <i class="bi bi-send"></i>
                                        </button>
                                    }
                                    @if (User.IsInRole("Administrador"))
                                    {
                                        <button class="btn btn-danger eliminar-btn" data-toggle="tooltip" data-placement="top" title="Eliminar">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    }
                                </div>                          
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <!--Elementos de paginacion-->
    <div class="container">
        <div class="row">
            <div class="col-md-10 col-sm-12">
                <nav aria-label="...">
                    <ul class="pagination">
                        <li class="page-item">
                            <a data-numeroPagina="@(Model.Paginacion.PaginaInicio - 1)" data-filtroActual="@filtroActual" class="page-link @anteriorDeshabilitado">
                                Anterior
                            </a>
                        </li>
                        @for (var i = 1; i <= Model.Paginacion.PaginasTotales; i++)
                        {
                            var paginaActiva = (i == Model.Paginacion.PaginaInicio) ? "active" : "";
                            <li class="page-item">
                                <a data-numeroPagina="@i" data-filtroActual="@filtroActual" class="page-link @paginaActiva">
                                    @i
                                </a>
                            </li>
                        }
                        <li class="page-item">
                            <a data-numeroPagina="@(Model.Paginacion.PaginaInicio + 1)" data-filtroActual="@filtroActual" class="page-link @siguienteDeshabilitado">
                                Siguiente
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    </div>
}