@model Aplicacion.Models.AdopcionViewModel
@{
    ViewData["Title"] = "Adopciones";
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
<style>

    .b-example-divider {
        height: 3rem;
        background-color: rgba(0, 0, 0, .1);
        border: solid rgba(0, 0, 0, .15);
        border-width: 1px 0;
        box-shadow: inset 0 .5em 1.5em rgba(0, 0, 0, .1), inset 0 .125em .5em rgba(0, 0, 0, .15);
    }

    .huella-img {
        width: 3rem;
        height: 3rem;
        transform: translateY(-0.4rem);
    }

    .btn-custom {
        background-color: #59a1ab;
        color: white;
        border-color: #59a1ab;
    }

    .btn-custom:hover {
        background-color: #41767d;
        color: white;
        border-color: #41767d;
    }

    .card-adoptado {
        background-color: #D9F7F4;
    }

    .custom-tooltip {
        --bs-tooltip-bg: var(--bs-primary);
    }

    .tooltip-Eliminar {
        --bs-tooltip-bg: var(--bs-danger);
    }


    .tooltip-Contactar {
        --bs-tooltip-bg: #59a1ab;
        --bs-tooltip-color: #FFFFFF;
    }
</style>

<div class="text-center" style="background-color: #c2dee2; padding-top: 16px; padding-bottom: 16px;">
    <h1 class="display-7">Perros en adopción <img class="huella-img" src="~/img/listadoAdopciones-icon.png" /></h1>
    <p style="margin-bottom: 0px;">
        ¡Encuentra tu compañero perfecto! Explora nuestras adopciones y suma a tu familia un familiar canino. ¡Adopta hoy y cambia una vida para siempre!
    </p>
</div>

<!--Filtros para busqueda de adopciones-->
<div class="container" style="margin-top: 20px;">
    <div class="row">
        <div class="col-6">
            <form>
                <label class="form-label fw-bold">
                    Buscador de perros por tamaño:
                </label>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="FiltroTamano" id="TamanoPequeno" value="Pequeño">
                    <label class="form-check-label" for="TamanoPequeno">
                        Pequeño
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="FiltroTamano" id="TamanoMediano" value="Mediano">
                    <label class="form-check-label" for="TamanoMediano">
                        Mediano
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="FiltroTamano" id="TamanoGrande" value="Grande">
                    <label class="form-check-label" for="TamanoGrande">
                        Grande
                    </label>
                </div>
            </form>
            <button class="btn btn-primary" type="button" id="btnBuscar" style="margin-top: 20px;" onclick="ListarAdopciones()">Buscar</button>
        </div>
        <div class="col-6">
            <form>
                <label class="form-label fw-bold">
                    Buscador de perros por color o raza:
                </label>
                <input class="form-control me-2" type="text" name="buscar"
                       data-bs-toggle="tooltipBusqueda" data-bs-placement="bottom"
                       data-bs-custom-class="custom-tooltip"
                       data-bs-title="El criterio de busqueda es por color o raza del perro publicado"
                       autocomplete="off"
                       placeholder="Buscar..." id="BuscadorAdopciones">
            </form>
            <a class="btn btn-warning" onclick="ListarAdopciones('reset')" style="margin-top: 20px;">Listado completo</a>
        </div>
    </div>
</div>

<div class="container-fluid" id="containerListaAdopciones" style="margin-bottom: 20px; margin-top: 20px;">
    @await Html.PartialAsync("_ListarAdopciones", Model)
</div>

<!--Inicio Modal para contacto con el publicador-->
<div class="modal fade" id="ModalContactar" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">
                    <i class="fa-solid fa-envelope fa-xl"></i>
                    Contactar publicación de adopción
                </h1>
                <!--<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>-->
            </div>
            <div class="modal-body">
                <form autocomplete="off" class="row g-3 needs-validation Formulario" novalidate id="formContactoPublicador">
                    <input type="number" id="idAdopcion" hidden value="">
                    <input type="text" id="NombrePerro" hidden value="">
                    <div class="col-md-12">
                        <label for="remitente" class="form-label">Remitente</label>
                        @if (User.Identity!.IsAuthenticated)
                        {
                            <input type="email" class="form-control" id="Remitente" name="Remitente" readonly>
                        }
                        else
                        {
                            <input type="email" class="form-control InputEmail" id="Remitente" name="Remitente" required>
                            <div class="invalid-feedback">
                                Ingrese un email válido (debe incluir @@)
                            </div>
                        }
                    </div>
                    <div class="col-md-12">
                        <label for="destinatario" class="form-label">Destinatario</label>
                        <input type="email" class="form-control" id="Destinatario" name="Destinatario" readonly>
                    </div>
                    @*                    <div class="col-md-12">
                    <label for="validationCustom01" class="form-label">Asunto</label>
                    <input type="text" class="form-control" maxlength="50" id="Asunto" name="Asunto" required>
                    <div class="invalid-feedback">
                    Ingrese un asunto para el correo a enviar! (máximo 50 caracteres)
                    </div>
                    </div>*@
                    <div class="col-md-12">
                        <label for="validationCustom02" class="form-label">Mensaje</label>
                        <textarea class="form-control InputText" maxlength="500" id="Contenido" name="Contenido" required></textarea>
                        <div class="invalid-feedback">
                            Ingrese un mensaje a incluir en el cuerpo del correo! (máximo 500 caracteres)
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary BtnCancelarForm" data-bs-dismiss="modal" id="BtnCancelarContacto">Cancelar</button>
                        <button type="button" class="btn btn-custom BtnEnvioForm" onclick="enviarCorreoPublicador()" id="BtnContacto" disabled>Aceptar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="b-example-divider"></div>

@section Scripts{
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <!--<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>-->
    @*<script src="~/js/bootstrap.bundle.min.js"></script>*@
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <!-- Constantes de inicializacion de tooltips -->
    <script>
        const tooltipBusqueda = document.querySelectorAll('[data-bs-toggle="tooltipBusqueda"]')
        const tooltipListaBusqueda = [...tooltipBusqueda].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))

        function InicializarTooltips() {
            const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
            const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
        }

        $(document).ready(function () {
            InicializarTooltips();
        });
    </script>

    <!--Validacion de relleno de formulario-->
    <script>
        // --> RESET DE FORMULARIOS MEDIANTE BOTON CANCELAR <--
        function ResetFormulario(boton) {
            var formulario = boton.closest("form");
            var campos = formulario.querySelectorAll(".InputText, .InputEmail, .InputDate, .InputSelect, .InputNumber, .InputFoto");

            campos.forEach(function (campo) {
                campo.value = '';
                if (campo.classList.contains("is-valid")) {
                    campo.classList.remove("is-valid");
                }
                if (campo.classList.contains("is-invalid")) {
                    campo.classList.remove("is-invalid");
                }
            });

            var botonEnvio = formulario.querySelector(".BtnEnvioForm");
            botonEnvio.disabled = true;
        }
        var botonesCancelar = document.querySelectorAll(".BtnCancelarForm");
        botonesCancelar.forEach(function (elemento) {
            elemento.addEventListener('click', function () {
                ResetFormulario(this);
            });
        });

        // --> VALIDACION DE FORMULARIOS PARA BOTON ACEPTAR <--
        var formularios = document.querySelectorAll(".Formulario");
        var botonesEnvio = document.querySelectorAll(".BtnEnvioForm");

        function ValidarFormulario() {
            var formulario = this;
            var campos = formulario.querySelectorAll(".InputText, .InputEmail, .InputDate, .InputSelect, .InputNumber");
            var todosValidos = true;

            campos.forEach(function (campo) {
                if (!campo.classList.contains("is-valid")) {
                    todosValidos = false;
                    return;
                }
            });

            var botonEnvio = formulario.querySelector(".BtnEnvioForm");
            if (todosValidos) {
                botonEnvio.disabled = false;
            } else {
                botonEnvio.disabled = true;
            }
        }

        // --> VALIDACION DE INPUT TEXT <--
        function ValidarInputText() {
            if (this.value.trim() !== '') {
                this.classList.remove('is-invalid');
                this.classList.add('is-valid');
            } else {
                this.classList.remove('is-valid');
                this.classList.add('is-invalid');
            }
        }

        // --> VALIDACION DE INPUT EMAIL <--
        function ValidarInputEmail() {
            if (this.value.trim() !== '' && this.value.includes('@@')) {
                this.classList.remove('is-invalid');
                this.classList.add('is-valid');
            } else {
                this.classList.remove('is-valid');
                this.classList.add('is-invalid');
            }
        }

        // --> VALIDACION DE INPUT DATE <--
        function ValidarInputDate(fechaActual) {
            if (this.value.trim() !== '' && (this.value <= fechaActual)) {
                this.classList.remove('is-invalid');
                this.classList.add('is-valid');
            } else {
                this.classList.remove('is-valid');
                this.classList.add('is-invalid');
            }
        }

        // --> VALIDACION DE INPUT SELECT <--
        function ValidarInputSelect() {
            if (this.selectedIndex !== -1) {
                this.classList.remove('is-invalid');
                this.classList.add('is-valid');
            } else {
                this.classList.remove('is-valid');
                this.classList.add('is-invalid');
            }
        }

        // --> VALIDACION DE INPUT NUMBER <--
        function ValidarInputNumber() {
            if (/^[0-9]+([.][0-9]+)?$/.test(this.value)) {
                var pesoNum = parseFloat(this.value);
                var enteroMin = 0; // Valor mínimo para la parte entera
                var enteroMax = 100; // Valor máximo para la parte entera
                var decimalMin = 0; // Valor mínimo para la parte decimal
                var decimalMax = 999; // Valor máximo para la parte decimal

                var entero = Math.floor(pesoNum);
                var decimal = Math.round((pesoNum - entero) * 100);

                if (entero >= enteroMin && entero <= enteroMax && decimal >= decimalMin && decimal <= decimalMax) {
                    this.classList.remove("is-invalid");
                    this.classList.add("is-valid");
                } else {
                    this.classList.remove("is-valid");
                    this.classList.add("is-invalid");
                }
            } else {
                this.classList.remove("is-valid");
                this.classList.add("is-invalid");
            }
        }

        var fechaActual = new Date();
        fechaActual.setUTCHours(fechaActual.getUTCHours() - 3); // Modifica la fecha para que sea la actual de Argentina
        var valorActual = fechaActual.toISOString().split("T")[0];
        formularios.forEach(function (formulario) {
            var campos = formulario.querySelectorAll(".InputText, .InputEmail, .InputDate, .InputSelect, .InputNumber");
            campos.forEach(function (campo) {
                campo.addEventListener("input", function () {
                    if (campo.classList.contains("InputText")) {
                        ValidarInputText.call(campo);
                    } else if (campo.classList.contains("InputDate")) {
                        campo.setAttribute("max", valorActual);
                        ValidarInputDate.call(campo, valorActual);
                    } else if (campo.classList.contains("InputSelect")) {
                        ValidarInputSelect.call(campo);
                    } else if (campo.classList.contains("InputNumber")) {
                        ValidarInputNumber.call(campo);
                    }
                    else if (campo.classList.contains("InputEmail")) {
                        ValidarInputEmail.call(campo);
                    }
                    ValidarFormulario.call(formulario);
                });
            });
        });
    </script>

    <!--Inicializacion de Remitente y Destinatario-->
    <script>
        function BtnVisualizarContacto(idAdopcion, remitente, destinatario, nombrePerro) {
            document.getElementById("Remitente").value = remitente;
            document.getElementById("Destinatario").value = destinatario;
            document.getElementById("idAdopcion").value = idAdopcion;
            document.getElementById("NombrePerro").value = nombrePerro;
            $('#ModalContactar').modal('show');
        };
    </script>

    <!--Elimnar adopcion -->
    <script>
        window.addEventListener('load', function () {
            //capitalizarNombresPerros();
        });
        $(document).ready(function () {
            InicializacionDeFunciones();
        });
        function InicializacionDeFunciones() {
            $('.eliminar-btn').click(function () {
            var adopcionId = $(this).closest('.card').data('adopcion-id');
            var destinatario = $(this).closest('.card').data('destinatario');
            var nombrePerro = $(this).closest('.card').data('nombreperro');
            var tarjetaAdopcion = $(this).closest('.card'); // Obtener la tarjeta de adopción actual

            Swal.fire({
                title: '¿Estás seguro de que deseas eliminar esta publicación?',
                text: 'Esta acción no se puede deshacer.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Sí, eliminar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Enviar la solicitud AJAX para eliminar la publicación de la adopción
                    $.ajax({
                        url: '/Adopciones/BajaLogica',
                        type: 'POST',
                        data: { id: adopcionId, destinatario: destinatario, nombrePerro: nombrePerro},
                        success: function (response) {
                            // Mostrar el mensaje de éxito
                            Swal.fire('¡Publicación eliminada!', 'La publicación de adopción ha sido eliminada.', 'success');
                            ListarAdopciones();
                        },
                        error: function (error) {
                            Swal.fire('Error', 'Hubo un problema al procesar la solicitud.', 'error');
                        }
                    });
                }
            });
        });
        }
        function capitalizarNombresPerros() {
            var cardsAdopcion = document.querySelectorAll('.card');

            cardsAdopcion.forEach(function (card) {
                var nombrePerroElemento = card.querySelector('.card-body .nombrePerro');

                var nombrePerro = nombrePerroElemento.textContent;

                if (!nombrePerro.includes('ADOPTADO')) {
                    var palabras = nombrePerro.split(' ');

                    for (var i = 0; i < palabras.length; i++) {
                        var palabra = palabras[i];

                        palabras[i] = palabra.charAt(0).toUpperCase() + palabra.slice(1).toLowerCase();
                    }

                    nombrePerro = palabras.join(' ');
                }

                nombrePerroElemento.textContent = nombrePerro;
            });
        }
        // Contacto con el publicador
        function enviarCorreoPublicador() {
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            })
            Swal.fire({
                title: '¿Enviar correo al publicador de la adopcion?',
                text: "Confirme la acción",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Confirmar',
                cancelButtonText: 'Cancelar',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    var card = document.querySelector('.card');                   
                    var mensaje = {
                        remitente: document.getElementById("Remitente").value,
                        destinatario: document.getElementById("Destinatario").value,
                        contenido: document.getElementById("Contenido").value,
                        nombrePerro: document.getElementById("NombrePerro").value,
                        adopcionId: document.getElementById("idAdopcion").value
                        //asunto: document.getElementById("Asunto").value
                    };
                    
                    $.ajax({
                        url: '@Url.Action("ContactarPublicador", "Adopciones")',
                        type: 'POST',
                        dataType: 'json',
                        data: { remitente: mensaje.remitente, destinatario: mensaje.destinatario, nombrePerro: mensaje.nombrePerro, contenido: mensaje.contenido, adopcionId: mensaje.adopcionId },
                        success: function (data) {
                            if (data.error) {
                                Swal.fire({
                                    icon: 'warning',
                                    title: 'Mensaje vacio',
                                    text: data.message,
                                })
                                var boton = document.getElementById('BtnCancelarContacto');
                                boton.click();
                            }
                            else {
                                if (data.success) {
                                    $('#ModalContactar').modal('hide');
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Mensaje enviado!',
                                        text: data.message,
                                    })
                                } else {
                                    Swal.fire({
                                        icon: 'warning',
                                        title: 'Lo siento',
                                        text: data.message
                                    })
                                }
                                var boton = document.getElementById('BtnCancelarContacto');
                                boton.click();
                            }

                        },
                        error: function (xhr, status, error) {
                            console.log(xhr);
                            console.log(status);
                            console.log(error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Error...',
                                text: 'Ocurrio un erorr!'
                            })
                        }
                    });
                }
            })
        }
    </script>

    <!-- Listado de adopciones -->
    <script>
        $(document).ready(function () {
            // Asegurar que se ejecute en la 1er carga de la vista
            CambiarPagina();

            // Obtiene el valor ingresado en el buscador cada vez que se presione una tecla escribiendo sobre el
            document.getElementById('BuscadorAdopciones').addEventListener('input', ListarAdopciones);

            // Obtener una referencia a los radio buttons por su nombre
            //var radioButtons = document.getElementsByName("FiltroTamano");

            // Añadir un evento "change" a cada radio button
            /*radioButtons.forEach(function (radioButton) {
                radioButton.addEventListener("change", function () {
                    ListarAdopciones();
                });
            });*/
        });

        function RadioSeleccionado(){
            var radioActual = document.getElementById('TamanoPequeno');
            var radio = null;

            if (radioActual.checked) {
                return (radioActual);
            }

            radioActual = document.getElementById('TamanoMediano');
            if (radioActual.checked) {
                return (radioActual);
            }

            radioActual = document.getElementById('TamanoGrande');
            if (radioActual.checked) {
                return (radioActual);
            }

            return (radio);
        }

        function CambiarPagina() {
            // Obtener todos los elementos <a> con la clase "numero-pagina"
            const elementosPagina = document.querySelectorAll('.page-link');

            // Agregar un evento de escucha de clic a cada elemento
            elementosPagina.forEach(elemento => {
                elemento.addEventListener('click', function () {
                    // Obtener el valor del atributo data-numeroPagina
                    const numeroPagina = this.getAttribute('data-numeroPagina');
                    //Tomar el texto ingresado en la busqueda
                    filtroActual = document.getElementById('BuscadorAdopciones').value;
                    var radioActual = RadioSeleccionado();
                    var valorFiltro = (radioActual != null) ? radioActual.value : "";
                    $.ajax({
                        url: '@Url.Action("ListarAdopciones", "Adopciones")',
                        type: 'GET',
                        data: { query: filtroActual, numeroPagina: numeroPagina, filtro: valorFiltro },
                        success: function (data) {
                            // Actualizar el contenido del contenedor de la lista de usuarios
                            $('#containerListaAdopciones').html(data);
                            //Carga los nuevos numeros de pagina
                            CambiarPagina();
                            InicializarTooltips();
                        },
                        error: function () {
                            alert('Error al buscar adopciones');
                        }
                    });
                });
            });
        }

        function ListarAdopciones(busquedaIngresada) {
            var filtroActual = document.getElementById('BuscadorAdopciones').value;
            var radioActual = RadioSeleccionado();
            if (busquedaIngresada == "reset") {
                filtroActual = null;
                if (radioActual != null) {
                    radioActual.checked = false;
                    radioActual = null;
                }
                document.getElementById('BuscadorAdopciones').value = "";
            }
            var valorFiltro = (radioActual != null) ? radioActual.value : "";
            // Realizar la petición Ajax
            $.ajax({
                url: '@Url.Action("ListarAdopciones", "Adopciones")', // Ruta de la acción del controlador para buscar usuarios
                type: 'GET',
                data: { query: filtroActual, filtro: valorFiltro }, // Envía el valor del buscador como parámetro de la búsqueda
                success: function (data) {
                    // Actualizar el contenido del contenedor de la lista de usuarios
                    $('#containerListaAdopciones').html(data);
                    //Carga los nuevos numeros de pagina
                    CambiarPagina();
                    InicializarTooltips();
                    InicializacionDeFunciones();
                },
                error: function () {
                    alert('Error al buscar adopciones');
                }
            });
        }
    </script>
}