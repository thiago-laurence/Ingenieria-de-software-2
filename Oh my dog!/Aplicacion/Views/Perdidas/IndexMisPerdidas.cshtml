@using Microsoft.AspNetCore.Identity;
@using System.Security.Claims;
@model List<Aplicacion.Models.Perdidas>
@{
    ViewData["Title"] = "Mis perdidas";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
<style>
    .b-example-divider {
        height: 3rem;
        background-color: rgba(0, 0, 0, .1);
        border: solid rgba(0, 0, 0, .15);
        border-width: 1px 0;
        box-shadow: inset 0 .5em 1.5em rgba(0, 0, 0, .1), inset 0 .125em .5em rgba(0, 0, 0, .15);
    }

    .huella-img {
        width: 3rem;
        height: 3rem;
        transform: translateY(-0.4rem);
    }

    .btn-custom {
        background-color: #59a1ab;
        color: white;
        border-color: #59a1ab;
    }

    .btn-custom:hover {
        background-color: #41767d;
        color: white;
        border-color: #41767d;
    }

    .card-recuperado {
        background-color: #D9F7F4;
    }

</style>

<div class="text-center" style="background-color: #c2dee2; padding-top: 16px; padding-bottom: 16px;">
    <h1 class="display-7">Mis perdidas <img class="huella-img" src="~/img/perroPerdido.png" /></h1>
    <p style="margin-bottom: 0px;">
        ¡Aqui puedes ver todas tus perdidas publicadas así como también podrás modificar, eliminar y marcar como recuperado al canino de tu publicacion!
    </p>
</div>

<div class="container-fluid" id="containerListaMisPerdidas" style="margin-top: 50px; margin-bottom: 50px;">
    @await Html.PartialAsync("_ListarMisPerdidas", Model)
</div>

<div class="modal fade" id="ModalModificarPerdida" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">
                    <i class="fa-solid fa-pencil fa-xl" style="color: #000000;"></i>
                    <i class="fa-solid fa-paw fa-xl" style="color: #000000;"></i>
                    Modificar perdida
                </h1>
                <!--<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>-->
            </div>
            <div class="modal-body">
                <form autocomplete="off" class="row g-3 needs-validation Formulario" novalidate id="formEditarPerdida">
                    <div class="col-md-4">
                        <label class="form-label">Nombre</label>
                        <input type="text" class="form-control InputText" id="Nombre" maxlength="50" required>
                        <div class="invalid-feedback">
                            Ingrese el nombre del perro
                        </div>
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Raza</label>
                        <input type="text" maxlength="50" class="form-control InputText" id="Raza" required>
                        <div class="invalid-feedback">
                            Ingrese una raza
                        </div>
                    </div>
                    <div class="col-md-4">
                        <label for="validationCustom04" class="form-label">Sexo</label>
                        <select class="form-select InputSelect" id="Sexo" required>
                            <option selected disabled value="">Elige...</option>
                            <option value="Macho">Macho</option>
                            <option value="Hembra">Hembra</option>
                        </select>
                        <div class="invalid-feedback">
                            Seleccione un sexo
                        </div>
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Color</label>
                        <input type="text" maxlength="50" class="form-control InputText" id="Color" required>
                        <div class="invalid-feedback">
                            Ingrese un color
                        </div>
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Peso (en Kg)</label>
                        <input type="text" class="form-control InputNumber" id="Peso" pattern="[0-9]+([.][0-9]+)?" required>
                        <div class="invalid-feedback">
                            Ingrese un peso válido (no puede empezar ni finalizar en '.', y no puede ser negativo)
                        </div>
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Fecha de la perdida</label>
                        <input type="date" class="form-control InputDate" id="FechaPerdida" max="" required>
                        <div class="invalid-feedback">
                            Ingrese una fecha válida (la fecha no puede ser futura)
                        </div>
                    </div>
                    <div class="col-md-12">
                        <label class="form-label" for="" value="">Foto (opcional)</label>
                        <input type="file" class="form-control InputFoto" accept=".jpg,.jpeg,.png" id="Foto">
                        <div class="invalid-feedback">
                            La foto ingresada no es válida
                        </div>
                    </div>
                    <div class="col-md-12">
                        <label for="validationCustom02" class="form-label">Descripción</label>
                        <textarea class="form-control InputText" maxlength="100" id="Descripcion" required></textarea>
                        <div class="invalid-feedback">
                            Ingrese una breve descripción del lugar y momento de la perdida del perro
                        </div>
                    </div>
                    <div class="modal-footer">
                        <input type="hidden" id="perdida-id" />
                        <input type="hidden" id="email" value="@User.FindFirstValue("Email")" />
                        <button type="button" class="btn btn-secondary BtnCancelarForm" data-bs-dismiss="modal" id="BotonCancelarModificar">Cancelar</button>
                        <button type="submit" class="btn btn-primary BtnEnvioForm" id="BotonEnvioModificar" disabled>Aceptar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="b-example-divider"></div>

@section scripts {

    <!-- Scripts Section -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    @*<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/bootstrap.bundle.min.js"></script>*@
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        function InicializarInputs(idFormulario, idBotonAceptar) {
            var formulario = document.getElementById(idFormulario);
            var campos = formulario.querySelectorAll(".InputText, .InputDate, .InputSelect, .InputNumber");

            campos.forEach(function (campo) {
                campo.classList.add("is-valid");
            });

            document.getElementById(idBotonAceptar).disabled = false;
        }

        $(document).ready(function () {
            /*
            window.addEventListener('load', function () {
                capitalizarNombresPerros();
            });
            // Validacion de solo letras en el campo
            var dogNameInput = document.getElementById("nombre");
            var dogColorInput = document.getElementById("color");
            var dogRazaInput = document.getElementById("raza");

            dogNameInput.addEventListener("input", function () {
                var regex = /[^a-zA-Z]/g;
                var cleanedValue = dogNameInput.value.replace(regex, '');
                dogNameInput.value = cleanedValue;
            });
            dogColorInput.addEventListener("input", function () {
                var regex = /[^a-zA-Z]/g;
                var cleanedValue = dogColorInput.value.replace(regex, '');
                dogColorInput.value = cleanedValue;
            });
            dogRazaInput.addEventListener("input", function () {
                var regex = /[^a-zA-Z]/g;
                var cleanedValue = dogRazaInput.value.replace(regex, '');
                dogRazaInput.value = cleanedValue;
            });
            //Fin validacion

            function capitalizarNombresPerros() {
                var cardsPerdida = document.querySelectorAll('.card');

                cardsPerdida.forEach(function (card) {
                    var nombrePerroElemento = card.querySelector('.card-body .nombre');

                    var nombrePerro = nombrePerroElemento.textContent;

                    if (!nombrePerro.includes('ADOPTADO')) {
                        var palabras = nombrePerro.split(' ');

                        for (var i = 0; i < palabras.length; i++) {
                            var palabra = palabras[i];

                            palabras[i] = palabra.charAt(0).toUpperCase() + palabra.slice(1).toLowerCase();
                        }

                        nombrePerro = palabras.join(' ');
                    }

                    nombrePerroElemento.textContent = nombrePerro;
                });
            }
            */
            // Manejo del evento clic en el botón "Adoptar"
            $('.recuperar-btn').click(function () {
                var perdidaId = $(this).data('perdida-id');
                var tarjetaPerdida = $(this).closest('.card'); // Obtener la tarjeta de adopción actual

                Swal.fire({
                    title: '¿Deseas marcar como recuperada la mascota?',
                    text: 'Confirme la acción',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonText: 'Sí',
                    cancelButtonText: 'No'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Enviar la solicitud AJAX para cambiar el estado a "Adoptado"
                        $.ajax({
                            url: '/Perdidas/Recuperar',
                            type: 'POST',
                            data: { id: perdidaId },
                            success: function (response) {
                                // Actualizar el estado en la tarjeta de adopción
                                tarjetaPerdida.find('.card-title').text("(RECUPERADO)");

                                // Agregar una clase CSS para resaltar el cambio de estado
                                tarjetaPerdida.addClass('card-recuperado');

                                // Quitar el boton Adoptar
                                tarjetaPerdida.find('.recuperar-btn').remove();
                                tarjetaPerdida.find('.modificar-btn').remove();

                                // Mostrar el mensaje de éxito
                                Swal.fire('¡Recuperación lograda!', 'La mascota ha sido recuperada', 'success');
                            },
                            error: function (error) {
                                Swal.fire('Error', 'Hubo un problema al procesar la solicitud.', 'error');
                            }
                        });
                    }
                });
            });
            // Manejo del evento clic en el botón "Eliminar"
            $('.eliminar-btn').click(function () {
                var perdidaId = $(this).closest('.card').data('perdida-id');
                var tarjetaPerdida = $(this).closest('.card'); // Obtener la tarjeta de adopción actual

                Swal.fire({
                    title: '¿Está seguro que desea eliminar esta publicación?',
                    text: 'Confirme la acción',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Aceptar',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Enviar la solicitud AJAX para eliminar la publicación de la adopción
                        $.ajax({
                            url: '/Perdidas/BajaLogica',
                            type: 'POST',
                            data: { id: perdidaId },
                            success: function (response) {
                                // Eliminar la tarjeta de adopción del DOM
                                tarjetaPerdida.parent().parent().remove();

                                // Mostrar el mensaje de éxito
                                Swal.fire('¡Publicación eliminada!', 'La publicación de la adopción ha sido eliminada.', 'success');
                            },
                            error: function (error) {
                                Swal.fire('Error', 'Hubo un problema al procesar la solicitud.', 'error');
                            }
                        });
                    }
                });
            });
            // Manejo del evento clic en el botón "Modificar"
            $('.modificar-btn').click(function () {
                var perdidaId = this.value;
                var tarjetaPerdida = $(this).closest('.card'); // Obtener la tarjeta de adopción actual
                // Obtener los datos de la adopción mediante una solicitud AJAX
                $.ajax({
                    url: '/Perdidas/Obtener',
                    type: 'POST',
                    data: { id: perdidaId },
                    success: function (response) {

                        // Rellenar el formulario con los datos de la adopción
                        $('#perdida-id').val(response.id);
                        $('#Nombre').val(response.nombre);
                        $('#Sexo').val(response.sexo);
                        $('#Raza').val(response.raza);
                        $('#Peso').val(response.peso);
                        document.getElementById("FechaPerdida").value = new Date(response.fechaPerdida).toISOString().split("T")[0];
                        $('#Color').val(response.color);
                        $('#Descripcion').val(response.descripcion);

                        InicializarInputs("formEditarPerdida", "BotonEnvioModificar");
                        $('#ModalModificarPerdida').modal('show');
                        // Mostrar el formulario

                    },
                    error: function (error) {
                        Swal.fire('Error', 'Hubo un problema al obtener los datos de la adopción.', 'error');
                    }
                });
            });
            // Manejo del evento de envío del formulario
            $('#formEditarPerdida').submit(function (event) {
                event.preventDefault(); // Evitar la acción de envío predeterminada
                var perdidaId = $(this).closest('.card').data('perdida-id');
                var tarjetaPerdida = $(this).closest('.card');
                // Obtener los datos del formulario
                var perdidaId = $('#perdida-id').val();
                var email = $('#email').val();
                var nombre = $('#Nombre').val();
                var sexo = $('#Sexo').val();
                var peso = $('#Peso').val();
                var raza = $('#Raza').val();
                var color = $('#Color').val();
                var foto = RegistrarFoto('Foto');
                var fechaPerdida = $('#FechaPerdida').val();
                var descripcion = $('#Descripcion').val();

                // Crear un objeto con los datos a enviar
                var data = {
                    id: perdidaId,
                    email: email,
                    nombre: nombre,
                    sexo: sexo,
                    raza: raza,
                    fechaPerdida: fechaPerdida,
                    color: color,
                    foto: foto,
                    peso: peso,
                    descripcion: descripcion
                };

                // Enviar la solicitud AJAX para guardar los cambios
                $.ajax({
                    url: '/Perdidas/Editar',
                    type: 'POST',
                    data: data,
                    success: function (response) {
                        //tarjetaPerdida.find('.card-body .nombre').text(nombre);
                        //tarjetaPerdida.find('.card-body .sexo').text(response.perdida.sexo);
                        //tarjetaPerdida.find('.raza').text(raza);
                        //tarjetaPerdida.find('.tamaño').text(tamano);
                        //tarjetaPerdida.find('.color').text(color);
                        //tarjetaPerdida.find('.descripcion').text(descripcion);

                        if (response.error) {
                            Swal.fire('No se pudo guardar los cambios', response.mensaje, 'warning');
                        }
                        else {
                            // Actualizar los datos en la tarjeta de adopción
                            var card = $('.card[data-perdida-id="' + response.perdida.id + '"]');
                            card.find('.card-body .nombrePerro').text(response.perdida.nombre.toUpperCase());
                            card.find('.card-body .sexo').html('<strong>Sexo:</strong> ' + response.perdida.sexo);
                            card.find('.card-body .raza').html('<strong>Raza:</strong> ' + response.perdida.raza);
                            card.find('.card-body .peso').html('<strong>Peso:</strong> ' + response.perdida.peso + ' (en Kg.)');
                            card.find('.card-body .fechaPerdida').html('<strong>Visto última vez:</strong> ' + new Date(response.perdida.fechaPerdida).toISOString().split("T")[0]);
                            card.find('.card-body .color').html('<strong>Color:</strong> ' + response.perdida.color);
                            card.find('.card-body .descripcion').html('<strong>Descripcion:</strong> ' + response.perdida.descripcion);
                            card.find('img').attr('src', '/img/' + response.perdida.foto).addClass('img-fluid mx-auto mt-2 foto').css({ 'width': '8rem', 'height': '8rem' });
                            // Mostrar el mensaje de éxito
                            Swal.fire('¡Publicación actualizada!', 'Los cambios han sido guardados correctamente', 'success');
                            // Ocultar el formulario
                            $('#ModalModificarPerdida').modal('hide');
                        }

                    },
                    error: function (error) {
                        Swal.fire('Error', 'Error con la conexion a la base de datos', 'error');
                    }
                });
            });
        });
    </script>

    <!--Validacion de relleno de formulario-->
    <script>
        // --> RESET DE FORMULARIOS MEDIANTE BOTON CANCELAR <--
        function ResetFormulario(boton) {
            var formulario = boton.closest("form");
            var campos = formulario.querySelectorAll(".InputText, .InputDate, .InputSelect, .InputNumber, .InputFoto");

            campos.forEach(function (campo) {
                campo.value = '';
                if (campo.classList.contains("is-valid")) {
                    campo.classList.remove("is-valid");
                }
                if (campo.classList.contains("is-invalid")) {
                    campo.classList.remove("is-invalid");
                }
            });

            var botonEnvio = formulario.querySelector(".BtnEnvioForm");
            botonEnvio.disabled = true;
        }
        var botonesCancelar = document.querySelectorAll(".BtnCancelarForm");
        botonesCancelar.forEach(function (elemento) {
            elemento.addEventListener('click', function () {
                ResetFormulario(this);
            });
        });

        // --> VALIDACION DE FORMULARIOS PARA BOTON ACEPTAR <--
        var formularios = document.querySelectorAll(".Formulario");
        var botonesEnvio = document.querySelectorAll(".BtnEnvioForm");

        function ValidarFormulario() {
            var formulario = this;
            var campos = formulario.querySelectorAll(".InputText, .InputDate, .InputSelect, .InputNumber");
            var todosValidos = true;

            campos.forEach(function (campo) {
                if (!campo.classList.contains("is-valid")) {
                    todosValidos = false;
                    return;
                }
            });

            var botonEnvio = formulario.querySelector(".BtnEnvioForm");
            if (todosValidos) {
                botonEnvio.disabled = false;
            } else {
                botonEnvio.disabled = true;
            }
        }

        // --> VALIDACION DE INPUT TEXT <--
        function ValidarInputText() {
            if (this.value.trim() !== '') {
                this.classList.remove('is-invalid');
                this.classList.add('is-valid');
            } else {
                this.classList.remove('is-valid');
                this.classList.add('is-invalid');
            }
        }

        // --> VALIDACION DE INPUT DATE <--
        function ValidarInputDate(fechaActual) {
            if (this.value.trim() !== '' && (this.value <= fechaActual)) {
                this.classList.remove('is-invalid');
                this.classList.add('is-valid');
            } else {
                this.classList.remove('is-valid');
                this.classList.add('is-invalid');
            }
        }

        // --> VALIDACION DE INPUT SELECT <--
        function ValidarInputSelect() {
            if (this.selectedIndex !== -1) {
                this.classList.remove('is-invalid');
                this.classList.add('is-valid');
            } else {
                this.classList.remove('is-valid');
                this.classList.add('is-invalid');
            }
        }

        // --> VALIDACION DE INPUT NUMBER <--
        function ValidarInputNumber() {
            if (/^[0-9]+([.][0-9]+)?$/.test(this.value)) {
                var pesoNum = parseFloat(this.value);
                var enteroMin = 0; // Valor mínimo para la parte entera
                var enteroMax = 100; // Valor máximo para la parte entera
                var decimalMin = 0; // Valor mínimo para la parte decimal
                var decimalMax = 999; // Valor máximo para la parte decimal

                var entero = Math.floor(pesoNum);
                var decimal = Math.round((pesoNum - entero) * 100);

                if (entero >= enteroMin && entero <= enteroMax && decimal >= decimalMin && decimal <= decimalMax) {
                    this.classList.remove("is-invalid");
                    this.classList.add("is-valid");
                } else {
                    this.classList.remove("is-valid");
                    this.classList.add("is-invalid");
                }
            } else {
                this.classList.remove("is-valid");
                this.classList.add("is-invalid");
            }
        }

        var fechaActual = new Date();
        fechaActual.setUTCHours(fechaActual.getUTCHours() - 3); // Modifica la fecha para que sea la actual de Argentina
        var valorActual = fechaActual.toISOString().split("T")[0];
        formularios.forEach(function (formulario) {
            var campos = formulario.querySelectorAll(".InputText, .InputDate, .InputSelect, .InputNumber");
            campos.forEach(function (campo) {
                campo.addEventListener("input", function () {
                    if (campo.classList.contains("InputText")) {
                        ValidarInputText.call(campo);
                    } else if (campo.classList.contains("InputDate")) {
                        campo.setAttribute("max", valorActual);
                        ValidarInputDate.call(campo, valorActual);
                    } else if (campo.classList.contains("InputSelect")) {
                        ValidarInputSelect.call(campo);
                    } else if (campo.classList.contains("InputNumber")) {
                        ValidarInputNumber.call(campo);
                    }
                    ValidarFormulario.call(formulario);
                });
            });
        });
    </script>

    <!--Validacion de subida de foto-->
    <script>
        function ValidarFoto() {
            var fileName = this.value;
            var idxDot = fileName.lastIndexOf(".") + 1;
            var extFile = fileName.substr(idxDot, fileName.length).toLowerCase();

            if (extFile == "jpg" || extFile == "jpeg" || extFile == "png") {
                this.classList.remove("is-invalid");
                this.classList.add("is-valid");
            } else {
                this.classList.remove("is-valid");
                this.classList.add("is-invalid");
                this.value = "";
            }
        }

        var inputFiles = document.querySelectorAll(".InputFoto");
        inputFiles.forEach(function (elemento) {
            elemento.addEventListener("change", ValidarFoto);
        });
    </script>

    <!--Registrar foto-->
    <script>
        function RegistrarFoto(idFoto) {
            var filename;
            var fullPath = document.getElementById(idFoto).value;
            if (fullPath) {
                var startIndex = (fullPath.indexOf('\\') >= 0 ? fullPath.lastIndexOf('\\') : fullPath.lastIndexOf('/'));
                filename = fullPath.substring(startIndex);
                if (filename.indexOf('\\') === 0 || filename.indexOf('/') === 0) {
                    filename = filename.substring(1);
                }
            } else {
                filename = null;
            }

            if (filename != null) {
                var fileUpload = $("#" + idFoto).get(0);
                var files = fileUpload.files;
                var fileData = new FormData();
                fileData.append(files[0].name, files[0]);
                $.ajax({
                    url: '/Perdidas/CargarFoto',
                    type: 'post',
                    datatype: 'json',
                    contentType: false,
                    processData: false,
                    async: false,
                    data: fileData,
                    success: function (response) {
                        console.log(response);
                    },
                    error: function (xhr, status, error) {
                        console.log(xhr);
                        console.log(status);
                        console.log(error);
                    }
                });
            }

            return (filename);
        }
    </script>
}