@model Aplicacion.Models.PublicacionTinderdog

@{
    ViewData["Title"] = "TinderDog - Perfil";
}

<style>
    .b-example-divider {
        height: 3rem;
        background-color: rgba(0, 0, 0, .1);
        border: solid rgba(0, 0, 0, .15);
        border-width: 1px 0;
        box-shadow: inset 0 .5em 1.5em rgba(0, 0, 0, .1), inset 0 .125em .5em rgba(0, 0, 0, .15);
    }

    .logo-img {
        width: 3rem;
        height: 3rem;
        transform: translateY(-0.4rem);
    }
</style>
<style>
    .Card {
      --gray: rgba(229, 231, 235, 1);
      width: 100%;
      height: 100%;
      display: flex;
      grid-gap: 1.25rem;
      gap: 1.25rem;
      border-radius: 1rem;
      background-color: rgba(255, 255, 255, 1);
      padding: 1.5rem;
    }

    .card-1 {
      width: 40%;
      border-radius: 0.75rem;
        background-color: var(--gray);
    }

    .right {
      display: flex;
      flex: 1 1 0%;
      flex-direction: column;
      grid-gap: 1.25rem;
      gap: 1.25rem;
    }

    .card-2 {
      height: 100%;
      width: 100%;
      border-radius: 1rem;
      background-color: var(--gray);
      padding: 5px 10px;
    }

    .card-3 {
      height: 100%;
      width: 100%;
      border-radius: 1rem;
      background-color: var(--gray);
      padding: 5px 10px;
    }
    .card-3 p{
        margin: 0px;
    }

    .bottom {
      margin-top: auto;
      display: flex;
      grid-gap: 0.75rem;
      gap: 0.75rem;
    }

    .card-4 {
      height: 2rem;
      width: 33%;
      border-radius: 9999px;
    }

    @@keyframes pulse {
      to {
        opacity: .2;
      }
    }
</style>



<div class="container-fluid" id="ContainerPerfil">
    @await Html.PartialAsync("_ListarPerfil", Model)
</div>

<div class="b-example-divider"></div>

<!--Modal de ingreso de celo para perro de sexo Femenino-->
<div class="modal fade" id="ModalHembra" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">
                    <i class="fa-solid fa-heart fa-xl" style="color: #000000;"></i>
                    <i class="fa-solid fa-pencil fa-xl" style="color: #000000;"></i>
                    Editar publicación de candidata
                </h1>
                <!--<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>-->
            </div>
            <div class="modal-body">
                <form autocomplete="off" class="row g-3 needs-validation Formulario" novalidate id="FormPublicacionHembra">
                    <div class="col-md-12">
                        <label class="form-label">Fecha del último celo</label>
                        <input type="date" class="form-control InputDate" id="FechaCelo" min="" max="">
                        <div class="invalid-feedback">
                            Ingrese una fecha válida (la fecha no puede ser futura)
                        </div>
                    </div>
                    <div class="col-md-12">
                        <label class="form-label" for="" value="">Fotos (opcional)</label>
                        <input type="file" class="form-control InputFoto" accept=".jpg,.jpeg,.png" id="FotosHembra" multiple>
                        <div class="invalid-feedback">
                            Las fotos ingresadas no son válidas
                        </div>
                    </div>
                    <div class="col-md-12">
                        <label class="form-label">Descripción</label>
                        <textarea class="form-control InputText" maxlength="500" id="DescripcionHembra" name="" required></textarea>
                        <div class="invalid-feedback">
                            Ingrese una descripción para la publicación del perfil de la candidata en el sitio
                        </div>
                    </div>
                    <div class="modal-footer">
                        <input type="hidden" value="" id="idPerro" />
                        <button type="button" class="btn btn-secondary BtnCancelarForm" data-bs-dismiss="modal" id="BotonCancelarRegistro">Cancelar</button>
                        <button type="button" class="btn btn-primary BtnEnvioForm" id="BotonRegistrarH" disabled onclick="RegistrarCelo()">Aceptar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!--Modal de publicacion para perro de sexo Masculino-->
<div class="modal fade" id="ModalMacho" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">
                    <i class="fa-solid fa-heart fa-xl" style="color: #000000;"></i>
                    <i class="fa-solid fa-pencil fa-xl" style="color: #000000;"></i>
                    Editar publicación de candidato
                </h1>
                <!--<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>-->
            </div>
            <div class="modal-body">
                <form autocomplete="off" class="row g-3 needs-validation Formulario" novalidate id="FormPublicacionMacho">
                    <div class="col-md-12">
                        <label class="form-label" for="" value="">Fotos (opcional)</label>
                        <input type="file" class="form-control InputFoto" accept=".jpg,.jpeg,.png" id="FotosMacho" multiple>
                        <div class="invalid-feedback">
                            Las fotos ingresadas no son válidas
                        </div>
                    </div>
                    <div class="col-md-12">
                        <label class="form-label">Descripción</label>
                        <textarea class="form-control InputText" maxlength="500" id="DescripcionMacho" name="" required></textarea>
                        <div class="invalid-feedback">
                            Ingrese una descripción para la publicación del perfil del candidato en el sitio
                        </div>
                    </div>
                    <div class="modal-footer">
                        <input type="hidden" value="" id="idPerro" />
                        <button type="button" class="btn btn-secondary BtnCancelarForm" data-bs-dismiss="modal" id="BotonCancelarRegistro">Cancelar</button>
                        <button type="button" class="btn btn-primary BtnEnvioForm" id="BotonRegistrarM" disabled onclick="ModificarPerfil(document.getElementById('idPerro').value, document.getElementById('DescripcionMacho').value, 'FotosMacho', 'ModalMacho')">Aceptar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <!--Listar perfil-->
    <script>
        function ListarPerfil() {
            var idPerro = @Model.IdPerro;
            $.ajax({
                url: '@Url.Action("ListarPerfil", "Tinderdog")',
                type: 'GET',
                data: { idPerro: idPerro },
                success: function (data) {
                    $('#ContainerPerfil').html(data);
                },
                error: function (xhr, status, error) {
                    console.log(xhr);
                    console.log(status);
                    console.log(error);
                }
            });
        }
    </script>

    <!--Validacion de relleno de formulario-->
    <script>
        // --> RESET DE FORMULARIOS MEDIANTE BOTON CANCELAR <--
        function ResetFormulario(boton) {
            var formulario = boton.closest("form");
            var campos = formulario.querySelectorAll(".InputText, .InputDate, .InputFoto");

            campos.forEach(function (campo) {
                campo.value = '';
                if (campo.classList.contains("is-valid")) {
                    campo.classList.remove("is-valid");
                }
                if (campo.classList.contains("is-invalid")) {
                    campo.classList.remove("is-invalid");
                }
            });

            var botonEnvio = formulario.querySelector(".BtnEnvioForm");
            botonEnvio.disabled = true;
        }
        var botonesCancelar = document.querySelectorAll(".BtnCancelarForm");
        botonesCancelar.forEach(function (elemento) {
            elemento.addEventListener('click', function () {
                ResetFormulario(this);
            });
        });

        // --> VALIDACION DE FORMULARIOS PARA BOTON ACEPTAR <--
        var formularios = document.querySelectorAll(".Formulario");
        var botonesEnvio = document.querySelectorAll(".BtnEnvioForm");

        function ValidarFormulario() {
            var formulario = this;
            var campos = formulario.querySelectorAll(".InputText, .InputDate");
            var todosValidos = true;

            campos.forEach(function (campo) {
                if (!campo.classList.contains("is-valid")) {
                    todosValidos = false;
                    return;
                }
            });

            var botonEnvio = formulario.querySelector(".BtnEnvioForm");
            if (todosValidos) {
                botonEnvio.disabled = false;
            } else {
                botonEnvio.disabled = true;
            }
        }

        // --> VALIDACION DE INPUT TEXT <--
        function ValidarInputText() {
            if (this.value.trim() !== '') {
                this.classList.remove('is-invalid');
                this.classList.add('is-valid');
            } else {
                this.classList.remove('is-valid');
                this.classList.add('is-invalid');
            }
        }

        // --> VALIDACION DE INPUT DATE <--
        function ValidarInputDate(fechaActual) {
            if (this.value.trim() !== '' && (this.value <= fechaActual)) {
                this.classList.remove('is-invalid');
                this.classList.add('is-valid');
            } else {
                this.classList.remove('is-valid');
                this.classList.add('is-invalid');
            }
        }

        var fechaActual = new Date();
        fechaActual.setUTCHours(fechaActual.getUTCHours() - 3); // Modifica la fecha para que sea la actual de Argentina
        var valorActual = fechaActual.toISOString().split("T")[0];
        formularios.forEach(function (formulario) {
            var campos = formulario.querySelectorAll(".InputText, .InputDate");
            campos.forEach(function (campo) {
                campo.addEventListener("input", function () {
                    if (campo.classList.contains("InputText")) {
                        ValidarInputText.call(campo);
                    } else if (campo.classList.contains("InputDate")) {
                        campo.setAttribute("max", valorActual);
                        ValidarInputDate.call(campo, valorActual);
                    }
                    ValidarFormulario.call(formulario);
                });
            });
        });
    </script>

    <!--Registrar foto-->
    <script>
        function RegistrarFoto(idFoto) {
            var filenames;
            var archivos = document.getElementById(idFoto);
            if (archivos.value) {
                filenames = new Array(archivos.files.length);
                for (var i = 0; i < archivos.files.length; i++) {
                    filenames[i] = archivos.files[i].name;
                    var fileData = new FormData();
                    fileData.append(archivos.files[i].name, archivos.files[i]);
                    $.ajax({
                        url: '/Tinderdog/CargarFoto',
                        type: 'post',
                        datatype: 'json',
                        contentType: false,
                        processData: false,
                        async: false,
                        data: fileData,
                        success: function (response) {
                            console.log(response);
                        },
                        error: function (xhr, status, error) {
                            console.log(xhr);
                            console.log(status);
                            console.log(error);
                        }
                    });
                }
            } else {
                filenames = null;
            }

            return (filenames);
        }
    </script>

    <!--Validacion de subida de foto-->
    <script>
        function ValidarFoto() {
            for (var i = 0; i < this.files.length; i++) {
                var fileName = this.files[i].name;
                var idxDot = fileName.lastIndexOf(".") + 1;
                var extFile = fileName.substr(idxDot, fileName.length).toLowerCase();

                if (!(extFile == "jpg" || extFile == "jpeg" || extFile == "png")) {
                    this.classList.remove("is-valid");
                    this.classList.add("is-invalid");
                    this.value = "";
                    return
                }
            }
            this.classList.remove("is-invalid");
            this.classList.add("is-valid");
        }

        var inputFiles = document.querySelectorAll(".InputFoto");
        inputFiles.forEach(function (elemento) {
            elemento.addEventListener("change", ValidarFoto);
        });
    </script>

    <!--Gestion de publicacion-->
    <script>
        const Toast = Swal.mixin({
            toast: true,
            position: 'bottom',
            showConfirmButton: false,
            timer: 4000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        })

        function InicializarInputs(idFormulario, idBotonAceptar) {
            var formulario = document.getElementById(idFormulario);
            var campos = formulario.querySelectorAll(".InputText, .InputDate, .InputFoto");

            campos.forEach(function (campo) {
                campo.classList.add("is-valid");
            });

            document.getElementById(idBotonAceptar).disabled = false;
        }
        
        function ObtenerPublicacion(idPerro, modalName) {
            $.ajax({
                url: '@Url.Action("ObtenerPublicacion", "Tinderdog")',
                type: 'GET',
                data: { idPublicacion: idPerro }, // Enviar los datos al controlador
                success: function (data) {
                    document.getElementById('idPerro').value = data.idPerro;
                    if (data.sexo == "Hembra"){
                        document.getElementById("FechaCelo").value = new Date(data.celo).toISOString().split("T")[0];
                        document.getElementById("DescripcionHembra").value = data.descripcion;
                        InicializarInputs("FormPublicacionHembra", "BotonRegistrarH");
                    }else{
                        document.getElementById("DescripcionMacho").value = data.descripcion;
                        InicializarInputs("FormPublicacionMacho", "BotonRegistrarM");
                    }
                    
                    $('#' + modalName).modal('show');
                },
                error: function (xhr, status, error) {
                    console.log(xhr);
                    console.log(status);
                    console.log(error);
                }
            });
        }

        function RegistrarCelo(modalName) {
            var idPerro = document.getElementById('idPerro').value;
            var descripcion = document.getElementById('DescripcionHembra').value;
            var fechaCelo = document.getElementById('FechaCelo').value;

            $.ajax({
                url: '@Url.Action("ModificarCelo", "Tinderdog")',
                type: 'POST',
                data: { idPerro: idPerro, FechaCelo: fechaCelo },
                success: function (data) {
                    ModificarPerfil(idPerro, descripcion, 'FotosHembra', 'ModalCelo');
                },
                error: function (xhr, status, error) {
                    console.log(xhr);
                    console.log(status);
                    console.log(error);
                }
            });
        }

        function ModificarPerfil(idPerro, descripcion, idFoto, modalName) {
            Swal.fire({
                title: '¿Desea modificar la publicación de TinderDog?',
                text: "Confirme la acción",
                imageUrl: "/img/tinderdog - logo.png",
                imageHeight: 100,
                showCancelButton: true,
                confirmButtonText: 'Confirmar',
                cancelButtonText: 'Cancelar',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    var publicacion = {
                        idPerro: idPerro,
                        descripcion: descripcion
                    };
                    var fotos = RegistrarFoto(idFoto);

                    $.ajax({
                        url: '@Url.Action("ModificarPerfil", "Tinderdog")',
                        type: 'POST',
                        data: { publicacion: publicacion, fotos: fotos },
                        success: function (data) {
                            if (data.success) {
                                Toast.fire({
                                    icon: 'success',
                                    text: '¡La publicación de TinderDog ha sido actualizada!'
                                })

                                var botonesCancelar = document.querySelectorAll(".BtnCancelarForm");
                                botonesCancelar.forEach(function (elemento) {
                                    elemento.click();
                                });

                                $('#' + modalName).modal('hide');
                                ListarPerfil();
                            }
                        },
                        error: function (xhr, status, error) {
                            console.log(xhr);
                            console.log(status);
                            console.log(error);
                        }
                    });
                }
            })
        }
    </script>
}