@model List<Aplicacion.Models.Perros>

@{
    ViewData["Title"] = "TinderDog";
}

<style>
    .b-example-divider {
        height: 3rem;
        background-color: rgba(0, 0, 0, .1);
        border: solid rgba(0, 0, 0, .15);
        border-width: 1px 0;
        box-shadow: inset 0 .5em 1.5em rgba(0, 0, 0, .1), inset 0 .125em .5em rgba(0, 0, 0, .15);
    }
    .card-cover {
        background-repeat: no-repeat;
        background-position: center center;
        background-size: cover;
    }

    .logo-img {
        height: 5rem;
    }

    .tooltip-meGustas {
        --bs-tooltip-bg: var(--bs-danger);
    }

    .tooltip-flechazo{
        --bs-tooltip-bg: #ffccf9;
        --bs-tooltip-color: #000000;
    }
    .btn-flechazo{
        background-color: #ffccf9;
    }
        .btn-flechazo:hover {
            background-color: #e6b8e0;
        }

    .tooltip-sugerencias {
        --bs-tooltip-bg: #ff4a00;
        --bs-tooltip-color: #FFFFFF;
    }
    .btn-sugerencias {
        background-color: #ff4a00;
        color: #FFFFFF;
    }
        .btn-sugerencias:hover {
            background-color: #e64300;
        }
    
    .tooltip-quitar {
        --bs-tooltip-bg: #59a1ab;
        --bs-tooltip-color: #FFFFFF;
    }
    .btn-quitar {
        background-color: #59a1ab;
        color: white;
        border-color: #59a1ab;
    }
        .btn-quitar:hover {
            background-color: #41767d;
            color: white;
            border-color: #41767d;
        }
</style>

<div class="text-center" style="background-color: #FFE5DB; padding-top: 16px; padding-bottom: 16px;">
    <h1 class="display-7">
        <img class="logo-img" src="~/img/tinderdog - logo 2 - Copy.png" />
    </h1>
    <p style="margin-bottom: 0px;">
        <strong>
            "En contra de las apariencias y a favor del amor"
        </strong>
        <br />
        Bienvenido a este apartado en donde podras encontrar de forma interactiva a la media naranja de tu candidato canino.
    </p>
</div>

<div class="container-fluid" id="ContainerListarMisCandidatos">
    @await Html.PartialAsync("_ListarMisCandidatos", Model)
</div>


<div class="b-example-divider"></div>

<!--Modal de ingreso de celo para perro de sexo Femenino-->
<div class="modal fade" id="ModalCelo" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">
                    <i class="fa-solid fa-heart fa-xl" style="color: #000000;"></i>
                    Publicar candidata
                </h1>
                <!--<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>-->
            </div>
            <div class="modal-body">
                <form autocomplete="off" class="row g-3 needs-validation Formulario" novalidate id="FormRegistrarPublicacion">
                    <div class="col-md-12">
                        <label class="form-label">Fecha del último celo</label>
                        <input type="date" class="form-control InputDate" id="FechaCelo" min="" max="">
                        <div class="invalid-feedback">
                            Ingrese una fecha válida (la fecha no puede ser futura)
                        </div>
                    </div>
                    <div class="col-md-12">
                        <label class="form-label" for="" value="">Fotos (opcional)</label>
                        <input type="file" class="form-control InputFoto" accept=".jpg,.jpeg,.png" id="FotosHembra" multiple>
                        <div class="invalid-feedback">
                            Las fotos ingresadas no son válidas
                        </div>
                    </div>
                    <div class="col-md-12">
                        <label class="form-label">Descripción</label>
                        <textarea class="form-control InputText" maxlength="500" id="DescripcionHembra" name="" required></textarea>
                        <div class="invalid-feedback">
                            Ingrese una descripción para la publicación del perfil de la candidata en el sitio
                        </div>
                    </div>
                    <div class="modal-footer">
                        <input type="hidden" value="" id="idPerro" />
                        <button type="button" class="btn btn-secondary BtnCancelarForm" data-bs-dismiss="modal" id="BotonCancelarRegistro">Cancelar</button>
                        <button type="button" class="btn btn-primary BtnEnvioForm" id="BotonRegistrar" disabled onclick="RegistrarCelo()">Aceptar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!--Modal de publicacion para perro de sexo Masculino-->
<div class="modal fade" id="ModalPublicacion" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">
                    <i class="fa-solid fa-heart fa-xl" style="color: #000000;"></i>
                    Publicar candidato
                </h1>
                <!--<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>-->
            </div>
            <div class="modal-body">
                <form autocomplete="off" class="row g-3 needs-validation Formulario" novalidate id="FormRegistrarPublicacion">
                    <div class="col-md-12">
                        <label class="form-label" for="" value="">Fotos (opcional)</label>
                        <input type="file" class="form-control InputFoto" accept=".jpg,.jpeg,.png" id="FotosMacho" multiple>
                        <div class="invalid-feedback">
                            Las fotos ingresadas no son válidas
                        </div>
                    </div>
                    <div class="col-md-12">
                        <label class="form-label">Descripción</label>
                        <textarea class="form-control InputText" maxlength="500" id="DescripcionMacho" name="" required></textarea>
                        <div class="invalid-feedback">
                            Ingrese una descripción para la publicación del perfil del candidato en el sitio
                        </div>
                    </div>
                    <div class="modal-footer">
                        <input type="hidden" value="" id="idPerro" />
                        <button type="button" class="btn btn-secondary BtnCancelarForm" data-bs-dismiss="modal" id="BotonCancelarRegistro">Cancelar</button>
                        <button type="button" class="btn btn-primary BtnEnvioForm" id="BotonRegistrar" disabled onclick="PublicarCandidato(document.getElementById('idPerro').value, document.getElementById('DescripcionMacho').value, 'FotosMacho', 'ModalPublicacion')">Aceptar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <!-- Constantes de inicializacion de tooltips -->
    <script>
        function InicializarTooltips(){
            const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
            const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
        }
        $(document).ready(function () {
            InicializarTooltips();
        });
    </script>

    <!--Listar candidatos-->
    <script>
        const Toast = Swal.mixin({
            toast: true,
            position: 'bottom',
            showConfirmButton: false,
            timer: 4000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        })

        function ListarCandidatos() {
            $.ajax({
                url: '@Url.Action("ListarMisCandidatos", "Tinderdog")',
                type: 'GET',
                success: function (data) {
                    $('#ContainerListarMisCandidatos').html(data);
                    InicializarTooltips();
                },
                error: function (xhr, status, error) {
                    console.log(xhr);
                    console.log(status);
                    console.log(error);
                }
            });
        }
    </script>

    <!--Publicar candidato-->
    <script>
        function CargarPublicacion(idPerro, modalName) {
            document.getElementById('idPerro').value = idPerro;
            $('#' + modalName).modal('show');
        }

        function RegistrarCelo(modalName) {
            var idPerro = document.getElementById('idPerro').value;
            var descripcion = document.getElementById('DescripcionHembra').value;
            var fechaCelo = document.getElementById('FechaCelo').value;

            $.ajax({
                url: '@Url.Action("RegistrarCelo", "Tinderdog")',
                type: 'POST',
                data: { idPerro: idPerro, FechaCelo: fechaCelo },
                success: function (data) {
                    PublicarCandidato(idPerro, descripcion, 'FotosHembra', 'ModalCelo');
                },
                error: function (xhr, status, error) {
                    console.log(xhr);
                    console.log(status);
                    console.log(error);
                }
            });
        }

        function PublicarCandidato(id, descripcion, idFoto, modalName){
            Swal.fire({
                title: '¿Desea publicar al candidato en TinderDog?',
                text: "Confirme la acción",
                imageUrl: "/img/tinderdog - logo.png",
                imageHeight: 100,
                showCancelButton: true,
                confirmButtonText: 'Confirmar',
                cancelButtonText: 'Cancelar',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    var publicacion = {
                        idPerro: id,
                        descripcion: descripcion
                    };
                    var fotos = RegistrarFoto(idFoto);

                    $.ajax({
                        url: '@Url.Action("PublicarCandidato", "Tinderdog")',
                        type: 'POST',
                        data: { publicacion: publicacion, fotos: fotos },
                        success: function (data) {
                            if (data.success) {
                                Toast.fire({
                                    icon: 'success',
                                    text: '¡El candidato ha sido publicado en TinderDog!'
                                })

                                var botonesCancelar = document.querySelectorAll(".BtnCancelarForm");
                                botonesCancelar.forEach(function (elemento) {
                                    elemento.click();
                                });

                                $('#' + modalName).modal('hide');
                                ListarCandidatos();
                            }
                        },
                        error: function (xhr, status, error) {
                            console.log(xhr);
                            console.log(status);
                            console.log(error);
                        }
                    });
                }
            })            
        }
    </script>

    <!--Quitar candidato-->
    <script>
        function QuitarCandidato(idPerro){
            Swal.fire({
                title: '¿Desea quitar al candidato de TinderDog?',
                text: "Confirme la acción",
                imageUrl: "/img/tinderdog - logo.png",
                imageHeight: 100,
                showCancelButton: true,
                confirmButtonText: 'Confirmar',
                cancelButtonText: 'Cancelar',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("QuitarCandidato", "Tinderdog")',
                        type: 'POST',
                        data: { idPerro: idPerro },
                        success: function (data) {
                            if (data.success) {
                                Toast.fire({
                                    icon: 'info',
                                    text: '¡El candidato ha sido quitado de TinderDog!'
                                })
                                ListarCandidatos();
                            }
                        },
                        error: function (xhr, status, error) {
                            console.log(xhr);
                            console.log(status);
                            console.log(error);
                        }
                    });
                }
            })
        }
    </script>

    <!--Validacion de relleno de formulario-->
    <script>
        // --> RESET DE FORMULARIOS MEDIANTE BOTON CANCELAR <--
        function ResetFormulario(boton) {
            var formulario = boton.closest("form");
            var campos = formulario.querySelectorAll(".InputText, .InputDate, .InputFoto");

            campos.forEach(function (campo) {
                campo.value = '';
                if (campo.classList.contains("is-valid")) {
                    campo.classList.remove("is-valid");
                }
                if (campo.classList.contains("is-invalid")) {
                    campo.classList.remove("is-invalid");
                }
            });

            var botonEnvio = formulario.querySelector(".BtnEnvioForm");
            botonEnvio.disabled = true;
        }
        var botonesCancelar = document.querySelectorAll(".BtnCancelarForm");
        botonesCancelar.forEach(function (elemento) {
            elemento.addEventListener('click', function () {
                ResetFormulario(this);
            });
        });

        // --> VALIDACION DE FORMULARIOS PARA BOTON ACEPTAR <--
        var formularios = document.querySelectorAll(".Formulario");
        var botonesEnvio = document.querySelectorAll(".BtnEnvioForm");

        function ValidarFormulario() {
            var formulario = this;
            var campos = formulario.querySelectorAll(".InputText, .InputDate");
            var todosValidos = true;

            campos.forEach(function (campo) {
                if (!campo.classList.contains("is-valid")) {
                    todosValidos = false;
                    return;
                }
            });

            var botonEnvio = formulario.querySelector(".BtnEnvioForm");
            if (todosValidos) {
                botonEnvio.disabled = false;
            } else {
                botonEnvio.disabled = true;
            }
        }

        // --> VALIDACION DE INPUT TEXT <--
        function ValidarInputText() {
            if (this.value.trim() !== '') {
                this.classList.remove('is-invalid');
                this.classList.add('is-valid');
            } else {
                this.classList.remove('is-valid');
                this.classList.add('is-invalid');
            }
        }

        // --> VALIDACION DE INPUT DATE <--
        function ValidarInputDate(fechaActual) {
            if (this.value.trim() !== '' && (this.value <= fechaActual)) {
                this.classList.remove('is-invalid');
                this.classList.add('is-valid');
            } else {
                this.classList.remove('is-valid');
                this.classList.add('is-invalid');
            }
        }

        var fechaActual = new Date();
        fechaActual.setUTCHours(fechaActual.getUTCHours() - 3); // Modifica la fecha para que sea la actual de Argentina
        var valorActual = fechaActual.toISOString().split("T")[0];
        formularios.forEach(function (formulario) {
            var campos = formulario.querySelectorAll(".InputText, .InputDate");
            campos.forEach(function (campo) {
                campo.addEventListener("input", function () {
                    if (campo.classList.contains("InputText")) {
                        ValidarInputText.call(campo);
                    } else if (campo.classList.contains("InputDate")) {
                        campo.setAttribute("max", valorActual);
                        ValidarInputDate.call(campo, valorActual);
                    }
                    ValidarFormulario.call(formulario);
                });
            });
        });
    </script>

    <!--Registrar foto-->
    <script>
        function RegistrarFoto(idFoto) {
            var filenames;
            var archivos = document.getElementById(idFoto);
            if (archivos.value) {
                filenames = new Array(archivos.files.length);
                for (var i = 0; i < archivos.files.length; i++) {
                    filenames[i] = archivos.files[i].name;
                    var fileData = new FormData();
                    fileData.append(archivos.files[i].name, archivos.files[i]);
                    $.ajax({
                        url: '/Tinderdog/CargarFoto',
                        type: 'post',
                        datatype: 'json',
                        contentType: false,
                        processData: false,
                        async: false,
                        data: fileData,
                        success: function (response) {
                            console.log(response);
                        },
                        error: function (xhr, status, error) {
                            console.log(xhr);
                            console.log(status);
                            console.log(error);
                        }
                    });
                }
            } else {
                filenames = null;
            }

            return (filenames);
        }
    </script>

    <!--Validacion de subida de foto-->
    <script>
        function ValidarFoto() {
            for(var i = 0; i < this.files.length; i++){
                var fileName = this.files[i].name;
                var idxDot = fileName.lastIndexOf(".") + 1;
                var extFile = fileName.substr(idxDot, fileName.length).toLowerCase();

                if (!(extFile == "jpg" || extFile == "jpeg" || extFile == "png")) {
                    this.classList.remove("is-valid");
                    this.classList.add("is-invalid");
                    this.value = "";
                    return
                }
            }
            this.classList.remove("is-invalid");
            this.classList.add("is-valid");
        }

        var inputFiles = document.querySelectorAll(".InputFoto");
        inputFiles.forEach(function (elemento) {
            elemento.addEventListener("change", ValidarFoto);
        });
    </script>
}
