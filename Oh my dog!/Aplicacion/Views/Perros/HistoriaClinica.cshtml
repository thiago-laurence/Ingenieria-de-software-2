@model Aplicacion.Models.TratamientosViewModel

@{
    ViewData["Title"] = "Historia clinica";
}

<style>
    .b-example-divider {
        height: 3rem;
        background-color: rgba(0, 0, 0, .1);
        border: solid rgba(0, 0, 0, .15);
        border-width: 1px 0;
        box-shadow: inset 0 .5em 1.5em rgba(0, 0, 0, .1), inset 0 .125em .5em rgba(0, 0, 0, .15);
    }
</style>


<div class="text-center" style="background-color: #bbeebb; padding-top: 16px; padding-bottom: 16px; margin-bottom: 50px;">
    <h1 class="display-7">
        <i class="fa-solid fa-paw fa-md"></i>
        @Model.Perro.Nombre - Historia clínica
    </h1>
</div>

<!-- Inicio de visualizacion de Tratamientos-->
<div class="container-fluid" id="ContainerListarTratamientos">
    @await Html.PartialAsync("_ListarTratamientos", Model.Perro)
</div>
<!-- Fin de visualizacion de Tratamientos-->
<div class="b-example-divider"></div>

<!--Modal de registro de nuevo de tratamiento-->
<div class="modal fade" id="ModalNuevoTratamiento" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">
                    <i class="fa-solid fa-file-medical fa-xl" style="color: #000000;"></i>
                    Registrar tratamiento
                </h1>
                <!--<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>-->
            </div>
            <div class="modal-body">
                <form autocomplete="off" class="row g-3 needs-validation Formulario" novalidate id="FormNuevoPerro">
                    <div class="col-md-6">
                        <label for="validationCustom04" class="form-label">Tratamiento</label>
                        <select class="form-select InputSelect" id="idTratamiento" required>
                            <option selected disabled value="">Elige...</option>
                            <!--Secuencia de tratamientos registrados-->
                            @foreach(var item in Model.Tratamientos)
                            {
                                <option value="@item.Id">@item.Nombre</option>
                            }                           
                        </select>
                        <div class="invalid-feedback">
                            Seleccione el tratamiento realizado!
                        </div>
                    </div>
                    <div class="col-md-12">
                        <label for="validationCustom02" class="form-label">Observaciones</label>
                        <textarea class="form-control InputText" maxlength="500" id="Observaciones" required></textarea>
                        <div class="invalid-feedback">
                            Ingrese info. relacionada al estado del perro con respecto al tratamiento realizado!
                        </div>
                    </div>
                    <input type="hidden" value="@Model.Perro.Id" id="idPerro" />
                    <input type="hidden" value="@Model.Perro.IdDueno" id="idDueno" />
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary BtnCancelarForm" data-bs-dismiss="modal" id="BotonCancelarRegistro">Cancelar</button>
                        <button type="button" class="btn btn-primary BtnEnvioForm" id="BotonEnvio" disabled onclick="ValidarTratamiento()">Aceptar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <!--Validacion de relleno de formulario-->
    <script>
        // --> RESET DE FORMULARIOS MEDIANTE BOTON CANCELAR <--
        function ResetFormulario(boton) {
            var formulario = boton.closest("form");
            var campos = formulario.querySelectorAll(".InputText, .InputDate, .InputSelect, .InputNumber, .InputFoto");

            campos.forEach(function (campo) {
                campo.value = '';
                if (campo.classList.contains("is-valid")) {
                    campo.classList.remove("is-valid");
                }
                if (campo.classList.contains("is-invalid")) {
                    campo.classList.remove("is-invalid");
                }
            });

            var botonEnvio = formulario.querySelector(".BtnEnvioForm");
            botonEnvio.disabled = true;
        }
        var botonesCancelar = document.querySelectorAll(".BtnCancelarForm");
        botonesCancelar.forEach(function (elemento) {
            elemento.addEventListener('click', function () {
                ResetFormulario(this);
            });
        });

        // --> VALIDACION DE FORMULARIOS PARA BOTON ACEPTAR <--
        var formularios = document.querySelectorAll(".Formulario");
        var botonesEnvio = document.querySelectorAll(".BtnEnvioForm");

        function ValidarFormulario() {
            var formulario = this;
            var campos = formulario.querySelectorAll(".InputText, .InputDate, .InputSelect, .InputNumber");
            var todosValidos = true;

            campos.forEach(function (campo) {
                if (!campo.classList.contains("is-valid")) {
                    todosValidos = false;
                    return;
                }
            });

            var botonEnvio = formulario.querySelector(".BtnEnvioForm");
            if (todosValidos) {
                botonEnvio.disabled = false;
            } else {
                botonEnvio.disabled = true;
            }
        }

        // --> VALIDACION DE INPUT TEXT <--
        function ValidarInputText() {
            if (this.value.trim() !== '') {
                this.classList.remove('is-invalid');
                this.classList.add('is-valid');
            } else {
                this.classList.remove('is-valid');
                this.classList.add('is-invalid');
            }
        }

        // --> VALIDACION DE INPUT DATE <--
        function ValidarInputDate(fechaActual) {
            if (this.value.trim() !== '' && (this.value <= fechaActual)) {
                this.classList.remove('is-invalid');
                this.classList.add('is-valid');
            } else {
                this.classList.remove('is-valid');
                this.classList.add('is-invalid');
            }
        }

        // --> VALIDACION DE INPUT SELECT <--
        function ValidarInputSelect() {
            if (this.selectedIndex !== -1) {
                this.classList.remove('is-invalid');
                this.classList.add('is-valid');
            } else {
                this.classList.remove('is-valid');
                this.classList.add('is-invalid');
            }
        }

        // --> VALIDACION DE INPUT NUMBER <--
        function ValidarInputNumber() {
            if (/^[0-9]+([.][0-9]+)?$/.test(this.value)) {
                var pesoNum = parseFloat(this.value);
                var enteroMin = 0; // Valor mínimo para la parte entera
                var enteroMax = 100; // Valor máximo para la parte entera
                var decimalMin = 0; // Valor mínimo para la parte decimal
                var decimalMax = 999; // Valor máximo para la parte decimal

                var entero = Math.floor(pesoNum);
                var decimal = Math.round((pesoNum - entero) * 100);

                if (entero >= enteroMin && entero <= enteroMax && decimal >= decimalMin && decimal <= decimalMax) {
                    this.classList.remove("is-invalid");
                    this.classList.add("is-valid");
                } else {
                    this.classList.remove("is-valid");
                    this.classList.add("is-invalid");
                }
            } else {
                this.classList.remove("is-valid");
                this.classList.add("is-invalid");
            }
        }

        var fechaActual = new Date();
        fechaActual.setUTCHours(fechaActual.getUTCHours() - 3); // Modifica la fecha para que sea la actual de Argentina
        var valorActual = fechaActual.toISOString().split("T")[0];
        formularios.forEach(function (formulario) {
            var campos = formulario.querySelectorAll(".InputText, .InputDate, .InputSelect, .InputNumber");
            campos.forEach(function (campo) {
                campo.addEventListener("input", function () {
                    if (campo.classList.contains("InputText")) {
                        ValidarInputText.call(campo);
                    } else if (campo.classList.contains("InputDate")) {
                        campo.setAttribute("max", valorActual);
                        ValidarInputDate.call(campo, valorActual);
                    } else if (campo.classList.contains("InputSelect")) {
                        ValidarInputSelect.call(campo);
                    } else if (campo.classList.contains("InputNumber")) {
                        ValidarInputNumber.call(campo);
                    }
                    ValidarFormulario.call(formulario);
                });
            });
        });
    </script>

    <!--Registrar nuevo tratamiento-->
    <script>
        const Toast = Swal.mixin({
            toast: true,
            position: 'bottom',
            showConfirmButton: false,
            timer: 4000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        })
        var descuentoAplicado = false;

        function AplicarDescuento(idDueno, tratamiento){
            $.ajax({
                url: '@Url.Action("AplicarDescuento", "Usuarios")',
                type: 'POST',
                dataType: 'json',
                data: { idUsuario: idDueno },
                success: function (data) {
                    descuentoAplicado = true;
                    RegistrarTratamiento(tratamiento);
                },
                error: function (xhr, status, error) {
                    console.log(xhr);
                    console.log(status);
                    console.log(error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error...',
                        text: 'Ocurrio un erorr!'
                    })
                }
            });
        }

        function PoseeDescuento(idDueno, tratamiento){
            $.ajax({
                url: '@Url.Action("PoseeDescuento", "Usuarios")',
                type: 'GET',
                dataType: 'json',
                data: { idUsuario: idDueno },
                success: function (data) {
                    if (data.descuento) {
                        Swal.fire({
                            icon: 'info',
                            title: 'El cliente posee un 10% de descuento!',
                            text: '¿Desea aplicarlo?',
                            imageUrl: "/img/descuento.png",
                            imageHeight: 155,
                            showCancelButton: true,
                            confirmButtonText: 'Si',
                            cancelButtonText: 'No',
                            reverseButtons: true
                        }).then((result) => {
                            if (result.isConfirmed) {
                                AplicarDescuento(idDueno, tratamiento);
                            }else{
                                RegistrarTratamiento(tratamiento);
                            }
                        })
                    }else{
                        RegistrarTratamiento(tratamiento);
                    }
                },
                error: function (xhr, status, error) {
                    console.log(xhr);
                    console.log(status);
                    console.log(error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error...',
                        text: 'Ocurrio un erorr!'
                    })
                }
            });
        }

        function RegistrarTratamiento(tratamiento){
            // Independientemente la existencia o aplicacion del descuento, se registra el tratamiento
            $.ajax({
                url: '@Url.Action("RegistrarTratamiento", "Perros")',
                type: 'POST',
                dataType: 'json',
                data: { tratamiento: tratamiento },
                success: function (data) {
                    ListarTratamientos(tratamiento.idPerro);
                    $('#ModalNuevoTratamiento').modal('hide');
                    Swal.fire({
                        icon: 'success',
                        title: 'Tratamiento registrado!',
                        text: data.message
                    }).then((result) => {
                        if (descuentoAplicado){
                            Toast.fire({
                                icon: 'info',
                                text: 'Se ha registrado la aplicación del descuento'
                            })
                        }
                        var boton = document.getElementById('BotonCancelarRegistro');
                        boton.click();
                    })
                },
                error: function (xhr, status, error) {
                    console.log(xhr);
                    console.log(status);
                    console.log(error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error...',
                        text: 'Ocurrio un erorr!'
                    })
                }
            });
        }

        function ValidarTratamiento() {
            var fechaActual = new Date();
            fechaActual.setUTCHours(fechaActual.getUTCHours() - 3); // Modifica la fecha para que sea la actual de Argentina
            var valorActual = fechaActual.toISOString().split("T")[0];
            var tratamiento = {
                idPerro: document.getElementById("idPerro").value,
                idTratamiento: document.getElementById("idTratamiento").value,
                observaciones: document.getElementById("Observaciones").value,
                fecha: valorActual
            };
            var idDueno = document.getElementById("idDueno").value;

            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            })
            Swal.fire({
                title: '¿Desea registrar un nuevo tratamiento?',
                text: "Confirme la acción",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Confirmar',
                cancelButtonText: 'Cancelar',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("ExisteCastracionAplicada", "Perros")',
                        type: 'GET',
                        dataType: 'json',
                        data: { idPerro: tratamiento.idPerro, idTratamiento: tratamiento.idTratamiento },
                        success: function (data) {
                            if (!data.castracion) { // Si NO existe una castracion aplicada
                                PoseeDescuento(idDueno, tratamiento);
                            } else { // Error en caso de castracion ya aplicada!
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error...',
                                    text: data.message
                                })
                            }
                        },
                        error: function (xhr, status, error) {
                            console.log(xhr);
                            console.log(status);
                            console.log(error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Error...',
                                text: 'Ocurrio un erorr!'
                            })
                        }
                    });
                }
            })
        }
    </script>

    <!--Listar tratamientos-->
    <script>
        function ListarTratamientos(id) {
            $.ajax({
                url: '@Url.Action("ListarTratamientos", "Perros")',
                type: 'GET',
                data: { idPerro: id },
                success: function (data) {
                    $('#ContainerListarTratamientos').html(data);
                },
                error: function (xhr, status, error) {
                    console.log(xhr);
                    console.log(status);
                    console.log(error);
                }
            });
        }
    </script>
}