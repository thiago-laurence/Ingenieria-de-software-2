// <auto-generated />
using System;
using Aplicacion.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Aplicacion.Migrations
{
    [DbContext(typeof(OhmydogdbContext))]
    partial class OhmydogdbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Aplicacion.Models.Adopciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Baja")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Raza")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Tamano")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id")
                        .HasName("PK__Adopcion__3214EC073618B9E0");

                    b.ToTable("Adopciones");
                });

            modelBuilder.Entity("Aplicacion.Models.ContactoAdopciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailRemitente")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<int>("IdAdopcion")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_ContactoAdopciones");

                    b.ToTable("ContactoAdopciones");
                });

            modelBuilder.Entity("Aplicacion.Models.ContactoPerdidas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailRemitente")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<int>("IdPerdida")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_ContactoPerdidas");

                    b.ToTable("ContactoPerdidas");
                });

            modelBuilder.Entity("Aplicacion.Models.Cuidadores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("HorarioIn")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HorarioOut")
                        .HasColumnType("time");

                    b.Property<string>("Latitud")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitud")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cuidadores");
                });

            modelBuilder.Entity("Aplicacion.Models.Descuentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Email" }, "IX_Descuento")
                        .IsUnique();

                    b.ToTable("Descuentos");
                });

            modelBuilder.Entity("Aplicacion.Models.EstadoTurno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("EstadoTurno", (string)null);
                });

            modelBuilder.Entity("Aplicacion.Models.FotosPublicacionTinderdog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Foto");

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("int")
                        .HasColumnName("IdPublicacion");

                    b.HasKey("Id")
                        .HasName("PK_Fotos_PublicacionTinderdog");

                    b.HasIndex("IdPublicacion");

                    b.ToTable("Fotos_PublicacionTinderdog", (string)null);
                });

            modelBuilder.Entity("Aplicacion.Models.HorarioTurnos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Turno")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("HorarioTurno", (string)null);
                });

            modelBuilder.Entity("Aplicacion.Models.ModalidadCuidador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdCuidador")
                        .HasColumnType("int");

                    b.Property<int?>("IdModalidad")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCuidador");

                    b.HasIndex("IdModalidad");

                    b.ToTable("ModalidadCuidador", (string)null);
                });

            modelBuilder.Entity("Aplicacion.Models.Paseadores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Foto")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<TimeSpan>("HorarioIn")
                        .HasPrecision(0)
                        .HasColumnType("time(0)")
                        .HasColumnName("HorarioIN");

                    b.Property<TimeSpan>("HorarioOut")
                        .HasPrecision(0)
                        .HasColumnType("time(0)");

                    b.Property<string>("Latitud")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Longitud")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id")
                        .HasName("PK_Paseadores");

                    b.ToTable("Paseadores");
                });

            modelBuilder.Entity("Aplicacion.Models.Perdidas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Baja")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPerdida")
                        .HasColumnType("datetime2");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Peso")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Raza")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id")
                        .HasName("PK_Perdidas");

                    b.ToTable("Perdidas");
                });

            modelBuilder.Entity("Aplicacion.Models.PerroTurnos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdPerro")
                        .HasColumnType("int");

                    b.Property<int>("IdTurno")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdPerro");

                    b.HasIndex("IdTurno");

                    b.HasIndex(new[] { "Id" }, "IX_PerroTurno");

                    b.ToTable("PerroTurno", (string)null);
                });

            modelBuilder.Entity("Aplicacion.Models.Perros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Celo")
                        .HasColumnType("date");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaDeNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("Foto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("IdDueno")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Peso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Raza")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id")
                        .HasName("PK_Perros");

                    b.HasIndex("IdDueno");

                    b.ToTable("Perros");
                });

            modelBuilder.Entity("Aplicacion.Models.PerrosMeGusta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdPerroEmisor")
                        .HasColumnType("int")
                        .HasColumnName("idPerroEmisor");

                    b.Property<int>("IdPerroReceptor")
                        .HasColumnType("int")
                        .HasColumnName("idPerroReceptor");

                    b.HasKey("Id")
                        .HasName("PK_PerrosMeGusta");

                    b.HasIndex("IdPerroEmisor");

                    b.HasIndex("IdPerroReceptor");

                    b.ToTable("PerrosMeGusta");
                });

            modelBuilder.Entity("Aplicacion.Models.PerrosNoMeGusta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdPerroEmisor")
                        .HasColumnType("int")
                        .HasColumnName("idPerroEmisor");

                    b.Property<int>("IdPerroReceptor")
                        .HasColumnType("int")
                        .HasColumnName("idPerroReceptor");

                    b.HasKey("Id")
                        .HasName("PK_PerrosNoMeGusta");

                    b.HasIndex("IdPerroEmisor");

                    b.HasIndex("IdPerroReceptor");

                    b.ToTable("PerrosNoMeGusta");
                });

            modelBuilder.Entity("Aplicacion.Models.Publicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("IdPerro")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPerro");

                    b.HasIndex("Tipo");

                    b.ToTable("Publicacion", (string)null);
                });

            modelBuilder.Entity("Aplicacion.Models.PublicacionTinderdog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Descripcion");

                    b.Property<int>("IdPerro")
                        .HasColumnType("int")
                        .HasColumnName("IdPerro");

                    b.HasKey("Id")
                        .HasName("PK_PublicacionTinderdog");

                    b.HasIndex(new[] { "IdPerro" }, "IX_IdPerro")
                        .IsUnique();

                    b.ToTable("PublicacionTinderdog");
                });

            modelBuilder.Entity("Aplicacion.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdRol")
                        .HasName("PK__Rol__2A49584C2F1A143A");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("Aplicacion.Models.TipoModalidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id")
                        .HasName("PK_ModalidadCuidador");

                    b.ToTable("TipoModalidad", (string)null);
                });

            modelBuilder.Entity("Aplicacion.Models.TipoPublicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("TipoPublicacion", (string)null);
                });

            modelBuilder.Entity("Aplicacion.Models.TratamientoPerro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("IdPerro")
                        .HasColumnType("int");

                    b.Property<int>("IdTratamiento")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id")
                        .HasName("PK_TratamientoPerro");

                    b.HasIndex("IdPerro");

                    b.HasIndex("IdTratamiento");

                    b.ToTable("TratamientoPerro", (string)null);
                });

            modelBuilder.Entity("Aplicacion.Models.Tratamientos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_Tratamientos");

                    b.ToTable("Tratamientos");
                });

            modelBuilder.Entity("Aplicacion.Models.Turnos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comentario")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Dueno")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("Horario")
                        .HasColumnType("int");

                    b.Property<string>("HorarioFinal")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_Turnos");

                    b.HasIndex("Estado");

                    b.HasIndex("Horario");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("Aplicacion.Models.UsuarioAdopcionPublicacion", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPublicacion");

                    b.ToTable("UsuarioAdopcionPublicacion", (string)null);
                });

            modelBuilder.Entity("Aplicacion.Models.UsuarioColectaPublicacion", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdPublicacion");

                    b.ToTable("UsuarioColectaPublicacion", (string)null);
                });

            modelBuilder.Entity("Aplicacion.Models.UsuarioPerdidaPublicacion", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPublicacion");

                    b.ToTable("UsuarioPerdidaPublicacion", (string)null);
                });

            modelBuilder.Entity("Aplicacion.Models.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("EsNuevo")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id")
                        .HasName("PK__Usuarios__3214EC076CD730FD");

                    b.HasIndex("IdRol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Aplicacion.Models.Vacuna", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Vacuna");

                    b.HasKey("Id")
                        .HasName("PK_Vacunas");

                    b.ToTable("Vacunas");
                });

            modelBuilder.Entity("Aplicacion.Models.VacunaPerro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dosis")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("FechaAplicacion")
                        .HasColumnType("date");

                    b.Property<int>("IdPerro")
                        .HasColumnType("int");

                    b.Property<int>("IdVacuna")
                        .HasColumnType("int");

                    b.Property<string>("NroLote")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id")
                        .HasName("PK_VacunaPerro");

                    b.HasIndex("IdPerro");

                    b.HasIndex("IdVacuna");

                    b.ToTable("VacunaPerro", (string)null);
                });

            modelBuilder.Entity("Aplicacion.Models.FotosPublicacionTinderdog", b =>
                {
                    b.HasOne("Aplicacion.Models.PublicacionTinderdog", "Publicacion")
                        .WithMany("Fotos")
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");
                });

            modelBuilder.Entity("Aplicacion.Models.ModalidadCuidador", b =>
                {
                    b.HasOne("Aplicacion.Models.Cuidadores", "IdCuidadorNavigation")
                        .WithMany("ModalidadCuidadors")
                        .HasForeignKey("IdCuidador")
                        .HasConstraintName("FK_ModalidadCuidador_Cuidadores");

                    b.HasOne("Aplicacion.Models.TipoModalidad", "IdModalidadNavigation")
                        .WithMany("ModalidadCuidadors")
                        .HasForeignKey("IdModalidad")
                        .HasConstraintName("FK_ModalidadCuidador_TipoModalidad");

                    b.Navigation("IdCuidadorNavigation");

                    b.Navigation("IdModalidadNavigation");
                });

            modelBuilder.Entity("Aplicacion.Models.PerroTurnos", b =>
                {
                    b.HasOne("Aplicacion.Models.Perros", "IdPerroNavigation")
                        .WithMany("PerroTurnos")
                        .HasForeignKey("IdPerro")
                        .HasConstraintName("FK_PerroTurno_Perros");

                    b.HasOne("Aplicacion.Models.Turnos", "IdTurnoNavigation")
                        .WithMany("PerroTurnos")
                        .HasForeignKey("IdTurno")
                        .IsRequired()
                        .HasConstraintName("FK_PerroTurno_Turnos");

                    b.Navigation("IdPerroNavigation");

                    b.Navigation("IdTurnoNavigation");
                });

            modelBuilder.Entity("Aplicacion.Models.Perros", b =>
                {
                    b.HasOne("Aplicacion.Models.Usuarios", "Dueno")
                        .WithMany("GetPerros")
                        .HasForeignKey("IdDueno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PerrosUsuarios");

                    b.Navigation("Dueno");
                });

            modelBuilder.Entity("Aplicacion.Models.PerrosMeGusta", b =>
                {
                    b.HasOne("Aplicacion.Models.PublicacionTinderdog", "PerroEmisor")
                        .WithMany("MeGustaDados")
                        .HasForeignKey("IdPerroEmisor")
                        .HasPrincipalKey("IdPerro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aplicacion.Models.PublicacionTinderdog", "PerroReceptor")
                        .WithMany("MeGustaRecibidos")
                        .HasForeignKey("IdPerroReceptor")
                        .HasPrincipalKey("IdPerro")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PerroEmisor");

                    b.Navigation("PerroReceptor");
                });

            modelBuilder.Entity("Aplicacion.Models.PerrosNoMeGusta", b =>
                {
                    b.HasOne("Aplicacion.Models.PublicacionTinderdog", "PerroEmisor")
                        .WithMany("NoMeGustaDados")
                        .HasForeignKey("IdPerroEmisor")
                        .HasPrincipalKey("IdPerro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aplicacion.Models.PublicacionTinderdog", "PerroReceptor")
                        .WithMany("NoMeGustaRecibidos")
                        .HasForeignKey("IdPerroReceptor")
                        .HasPrincipalKey("IdPerro")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PerroEmisor");

                    b.Navigation("PerroReceptor");
                });

            modelBuilder.Entity("Aplicacion.Models.Publicacion", b =>
                {
                    b.HasOne("Aplicacion.Models.Perros", "IdPerroNavigation")
                        .WithMany("Publicacions")
                        .HasForeignKey("IdPerro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Publicacion_Perros");

                    b.HasOne("Aplicacion.Models.TipoPublicacion", "TipoNavigation")
                        .WithMany("Publicacions")
                        .HasForeignKey("Tipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Publicacion_TipoPublicacion");

                    b.Navigation("IdPerroNavigation");

                    b.Navigation("TipoNavigation");
                });

            modelBuilder.Entity("Aplicacion.Models.PublicacionTinderdog", b =>
                {
                    b.HasOne("Aplicacion.Models.Perros", "Perro")
                        .WithOne("PublicacionTinderdog")
                        .HasForeignKey("Aplicacion.Models.PublicacionTinderdog", "IdPerro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perro");
                });

            modelBuilder.Entity("Aplicacion.Models.TratamientoPerro", b =>
                {
                    b.HasOne("Aplicacion.Models.Perros", "IdPerroNavigation")
                        .WithMany("TratamientoPerros")
                        .HasForeignKey("IdPerro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TratamientoPerro_Perros");

                    b.HasOne("Aplicacion.Models.Tratamientos", "IdTratamientoNavigation")
                        .WithMany("TratamientoPerros")
                        .HasForeignKey("IdTratamiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TratamientoPerro_Tratamientos");

                    b.Navigation("IdPerroNavigation");

                    b.Navigation("IdTratamientoNavigation");
                });

            modelBuilder.Entity("Aplicacion.Models.Turnos", b =>
                {
                    b.HasOne("Aplicacion.Models.EstadoTurno", "EstadoNavigation")
                        .WithMany("Turnos")
                        .HasForeignKey("Estado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Turnos_EstadoTurno");

                    b.HasOne("Aplicacion.Models.HorarioTurnos", "HorarioNavigation")
                        .WithMany("Turnos")
                        .HasForeignKey("Horario")
                        .IsRequired()
                        .HasConstraintName("FK_Turnos_HorarioTurno");

                    b.Navigation("EstadoNavigation");

                    b.Navigation("HorarioNavigation");
                });

            modelBuilder.Entity("Aplicacion.Models.UsuarioAdopcionPublicacion", b =>
                {
                    b.HasOne("Aplicacion.Models.Publicacion", "IdPublicacionNavigation")
                        .WithMany("UsuarioAdopcionPublicacions")
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioAdopcionPublicacion_Publicacion");

                    b.Navigation("IdPublicacionNavigation");
                });

            modelBuilder.Entity("Aplicacion.Models.UsuarioColectaPublicacion", b =>
                {
                    b.HasOne("Aplicacion.Models.Publicacion", "IdPublicacionNavigation")
                        .WithMany("UsuarioColectaPublicacions")
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioColectaPublicacion_Publicacion");

                    b.Navigation("IdPublicacionNavigation");
                });

            modelBuilder.Entity("Aplicacion.Models.UsuarioPerdidaPublicacion", b =>
                {
                    b.HasOne("Aplicacion.Models.Publicacion", "IdPublicacionNavigation")
                        .WithMany("UsuarioPerdidaPublicacions")
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioPerdidaPublicacion_Publicacion");

                    b.Navigation("IdPublicacionNavigation");
                });

            modelBuilder.Entity("Aplicacion.Models.Usuarios", b =>
                {
                    b.HasOne("Aplicacion.Models.Rol", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK__Usuarios__IdRol__48CFD27E");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("Aplicacion.Models.VacunaPerro", b =>
                {
                    b.HasOne("Aplicacion.Models.Perros", "IdPerroNavigation")
                        .WithMany("VacunaPerros")
                        .HasForeignKey("IdPerro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_VacunaPerro_Perros");

                    b.HasOne("Aplicacion.Models.Vacuna", "IdVacunaNavigation")
                        .WithMany("VacunaPerros")
                        .HasForeignKey("IdVacuna")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_VacunaPerro_Vacunas");

                    b.Navigation("IdPerroNavigation");

                    b.Navigation("IdVacunaNavigation");
                });

            modelBuilder.Entity("Aplicacion.Models.Cuidadores", b =>
                {
                    b.Navigation("ModalidadCuidadors");
                });

            modelBuilder.Entity("Aplicacion.Models.EstadoTurno", b =>
                {
                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("Aplicacion.Models.HorarioTurnos", b =>
                {
                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("Aplicacion.Models.Perros", b =>
                {
                    b.Navigation("PerroTurnos");

                    b.Navigation("PublicacionTinderdog")
                        .IsRequired();

                    b.Navigation("Publicacions");

                    b.Navigation("TratamientoPerros");

                    b.Navigation("VacunaPerros");
                });

            modelBuilder.Entity("Aplicacion.Models.Publicacion", b =>
                {
                    b.Navigation("UsuarioAdopcionPublicacions");

                    b.Navigation("UsuarioColectaPublicacions");

                    b.Navigation("UsuarioPerdidaPublicacions");
                });

            modelBuilder.Entity("Aplicacion.Models.PublicacionTinderdog", b =>
                {
                    b.Navigation("Fotos");

                    b.Navigation("MeGustaDados");

                    b.Navigation("MeGustaRecibidos");

                    b.Navigation("NoMeGustaDados");

                    b.Navigation("NoMeGustaRecibidos");
                });

            modelBuilder.Entity("Aplicacion.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Aplicacion.Models.TipoModalidad", b =>
                {
                    b.Navigation("ModalidadCuidadors");
                });

            modelBuilder.Entity("Aplicacion.Models.TipoPublicacion", b =>
                {
                    b.Navigation("Publicacions");
                });

            modelBuilder.Entity("Aplicacion.Models.Tratamientos", b =>
                {
                    b.Navigation("TratamientoPerros");
                });

            modelBuilder.Entity("Aplicacion.Models.Turnos", b =>
                {
                    b.Navigation("PerroTurnos");
                });

            modelBuilder.Entity("Aplicacion.Models.Usuarios", b =>
                {
                    b.Navigation("GetPerros");
                });

            modelBuilder.Entity("Aplicacion.Models.Vacuna", b =>
                {
                    b.Navigation("VacunaPerros");
                });
#pragma warning restore 612, 618
        }
    }
}
